,"Y(0=source, 1=sink, 2=none)",Description,Parameters,Return,ApiLevel
<android.view.accessibility.AccessibilityNodeInfo: void setTextEntryKey(boolean)>,2,"Sets whether the node represents a text entry key that is part of a keyboard or keypad. Note: Cannot be called from an AccessibilityService .
   This class is made immutable before being delivered to an AccessibilityService.",isTextEntryKey boolean : true if the node is a text entry key false otherwise. |||,,29
<android.media.MediaCodecInfo.VideoCapabilities.PerformancePoint: String toString()>,0,Convert to a debug string,,String a string representation of the object. |||,29
<android.hardware.camera2.params.SessionConfiguration: void setInputConfiguration(InputConfiguration)>,2,"Sets the InputConfiguration for a reprocessable session. Input configuration are not
 supported for SESSION_HIGH_SPEED .","input InputConfiguration : Input configuration.
This value must never be null . |||",,28
"<android.media.audiofx.DynamicsProcessing.Channel: void setPreEqBand(int,DynamicsProcessing.EqBand)>",2,Sets EqBand for PreEq stage for given band index,"band int : index of band of interest from PreEq stage |||
preEqBand DynamicsProcessing.EqBand : configuration to be set. |||",,28
<android.media.audiofx.DynamicsProcessing.MbcBand: void setPostGain(float)>,2,"sets the gain to be applied to the siganl AFTER the compression. Measured in decibels
 (dB) where 0 dB means no level change.",postGain float : desired value in decibels (dB) |||,,28
<android.text.DynamicLayout.Builder: DynamicLayout.Builder setJustificationMode(int)>,1,"Set paragraph justification mode. The default value is Layout#JUSTIFICATION_MODE_NONE . If the last line is too short for justification
 the last line will be displayed with the alignment set by setAlignment(Layout.Alignment) .","justificationMode int : justification mode for the paragraph.
Value is LineBreaker.JUSTIFICATION_MODE_NONE or LineBreaker.JUSTIFICATION_MODE_INTER_WORD |||","DynamicLayout.Builder this builder useful for chaining.
 
 This value will never be null . |||",28
<android.widget.Magnifier: int getDefaultHorizontalSourceToMagnifierOffset()>,0,"Returns the horizontal offset in pixels to be applied to the source center position
 to obtain the magnifier center position when show(float float) is called.
 The value is ignored when show(float float float float) is used instead. This units of this value are pixels.",,"int the default horizontal offset between the source center and the magnifier
 This units of this value are pixels.
 {} |||",29
"<android.hardware.camera2.CameraManager: void registerAvailabilityCallback(Executor,CameraManager.AvailabilityCallback)>",1,"Register a callback to be notified about camera device availability. The behavior of this method matches that of registerAvailabilityCallback(android.hardware.camera2.CameraManager.AvailabilityCallback android.os.Handler) except that it uses Executor as an argument
 instead of Handler .","executor Executor : The executor which will be used to invoke the callback.
This value must never be null .
Callback and listener events are dispatched through this Executor providing an easy way to control which thread is
used. To dispatch events through the main thread of your
application you can use Context.getMainExecutor() .
To dispatch events through a shared thread pool you can use AsyncTask#THREAD_POOL_EXECUTOR . |||
callback CameraManager.AvailabilityCallback : the new callback to send camera availability notices to
This value must never be null . |||",,28
"<android.app.admin.DevicePolicyManager: void setOverrideApnsEnabled(ComponentName,boolean)>",2,"Called by device owner to set if override APNs should be enabled. Override APNs are separated from other APNs on the device and can only be inserted or
 modified by the device owner. When enabled only override APNs are in use any other APNs
 are ignored.","admin ComponentName : which DeviceAdminReceiver this request is associated with
This value must never be null . |||
enabled boolean : true if override APNs should be enabled false otherwise |||",,28
<android.graphics.Paint: float getStrikeThruPosition()>,0,"Distance from top of the strike-through line to the baseline in pixels.

 The result is negative for positions that are above the baseline.
 This method returns where the strike-through line should be drawn independent of if the STRIKE_THRU_TEXT_FLAG bit is set. This units of this value are pixels.",,"float the position of the strike-through line in pixels
 This units of this value are pixels.
 {} |||",29
<android.view.View: Map getAttributeSourceResourceMap()>,0,"Returns the mapping of attribute resource ID to source resource ID where the attribute value
 was set. Source resource ID can either be a layout resource ID if the value was set in XML
 within the View tag or a style resource ID if the attribute was set in a style. The source
 resource value will be one of the resource IDs from getAttributeSourceResourceMap() . Note: this method will only return actual values if the view attribute debugging
 is enabled in Android developer options.",,"Map < Integer  Integer > mapping of attribute resource ID to source resource ID where the attribute value
 was set.
 
 This value will never be null . |||",29
"<android.provider.MediaStore: Uri getMediaUri(Context,Uri)>",0,"Return a MediaStore Uri that is an equivalent to the given DocumentsProvider Uri. This allows apps with Storage Access Framework permissions to convert
 between MediaStore and DocumentsProvider Uris that refer
 to the same underlying item. Note that this method doesn't grant any new
 permissions; callers must already hold permissions obtained with Intent#ACTION_OPEN_DOCUMENT or related APIs.","context Context : This value must never be null . |||
documentUri Uri : The DocumentsProvider Uri to convert.
This value must never be null . |||","Uri An equivalent MediaStore Uri. Returns null if no
         equivalent was found. |||",29
<android.graphics.drawable.Drawable: void setTintBlendMode(BlendMode)>,2,"Specifies a tint blending mode for this drawable. Defines how this drawable's tint color should be blended into the drawable
 before it is drawn to screen. Default tint mode is BlendMode#SRC_IN . Note: Setting a color filter via setColorFilter(android.graphics.ColorFilter)","blendMode BlendMode : BlendMode to apply to the drawable a value of null sets the default
blend mode value of BlendMode#SRC_IN This value may be null . |||",,29
<android.media.AudioPresentation.Builder: AudioPresentation.Builder setMasteringIndication(int)>,2,Sets the mastering indication.,"masteringIndication int : Input to set mastering indication.
Value is AudioPresentation.MASTERING_NOT_INDICATED  AudioPresentation.MASTERED_FOR_STEREO  AudioPresentation.MASTERED_FOR_SURROUND  AudioPresentation.MASTERED_FOR_3D or AudioPresentation.MASTERED_FOR_HEADPHONE |||",AudioPresentation.Builder This value will never be null . |||,29
"<android.graphics.Insets: void writeToParcel(Parcel,int)>",1,Flatten this object in to a Parcel.,"out Parcel : The Parcel in which the object should be written. |||
flags int : Additional flags about how the object should be written.
May be 0 or Parcelable.PARCELABLE_WRITE_RETURN_VALUE .
Value is either 0 or a combination of Parcelable.PARCELABLE_WRITE_RETURN_VALUE and android.os.Parcelable.PARCELABLE_ELIDE_DUPLICATES |||",,29
<android.app.NotificationChannelGroup: String getDescription()>,0,Returns the user visible description of this group.,,String |||,28
<android.view.textclassifier.SelectionEvent: int hashCode()>,2,"Returns a hash code value for the object. This method is
 supported for the benefit of hash tables such as those provided by HashMap . The general contract of hashCode is: Whenever it is invoked on the same object more than once during
     an execution of a Java application the hashCode method
     must consistently return the same integer provided no information
     used in equals comparisons on the object is modified.
     This integer need not remain consistent from one execution of an
     application to another execution of the same application. 
If two objects are equal according to the equals(Object) method then calling the hashCode method on each of
     the two objects must produce the same integer result. 
It is not required that if two objects are unequal
     according to the equals(java.lang.Object) method then calling the hashCode method on each of the
     two objects must produce distinct integer results.  However the
     programmer should be aware that producing distinct integer results
     for unequal objects may improve the performance of hash tables. 
As much as is reasonably practical the hashCode method defined by
 class Object does return distinct integers for distinct
 objects. (This is typically implemented by converting the internal
 address of the object into an integer but this implementation
 technique is not required by the
 Javaâ„¢ programming language.)",,int a hash code value for this object. |||,28
<android.telephony.data.ApnSetting: int getNetworkTypeBitmask()>,0,"Returns a bitmask describing the Radio Technologies(Network Types) which this APN may use.

 NetworkType bitmask is calculated from NETWORK_TYPE defined in TelephonyManager .

 Examples of Network Types include TelephonyManager#NETWORK_TYPE_UNKNOWN  TelephonyManager#NETWORK_TYPE_GPRS  TelephonyManager#NETWORK_TYPE_EDGE .",,int a bitmask describing the Radio Technologies(Network Types) |||,28
"<android.view.autofill.AutofillManager: void notifyViewClicked(View,int)>",2,Called to indicate a virtual view has been clicked.,"view View : the virtual view parent.
This value must never be null . |||
virtualId int : id identifying the virtual child inside the parent view. |||",,28
<android.icu.text.DecimalFormatSymbols: String getPercentString()>,0,[icu] Returns the string used for percent sign.,,String the percent string |||,28
<android.graphics.ImageDecoder.ImageInfo: String getMimeType()>,0,The mimeType of the image.,,String This value will never be null . |||,28
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setAuthType(int)>,2,Sets the authentication type of the APN.,"authType int : the authentication type to set for the APN
Value is ApnSetting.AUTH_TYPE_NONE  ApnSetting.AUTH_TYPE_PAP  ApnSetting.AUTH_TYPE_CHAP or ApnSetting.AUTH_TYPE_PAP_OR_CHAP |||",ApnSetting.Builder This value will never be null . |||,28
<android.icu.text.Bidi: int reorderVisual(byte)>,2,"This is a convenience method that does not use a Bidi object.
 It is intended to be used for when an application has determined the levels
 of objects (character sequences) and just needs to have them reordered (L2).
 This is equivalent to using getVisualMap() on a Bidi object.","levels byte : is an array of levels that have been determined by
the application. |||",int[] an array of levels.length indexes which will reflect the reordering of the characters. The index map will result in indexMap[visualIndex]==logicalIndex where indexMap represents the returned array. |||,29
<android.security.keystore.KeyGenParameterSpec.Builder: KeyGenParameterSpec.Builder setIsStrongBoxBacked(boolean)>,2,Sets whether this key should be protected by a StrongBox security chip.,isStrongBoxBacked boolean |||,KeyGenParameterSpec.Builder This value will never be null . |||,28
<android.icu.text.Bidi: int getResultLength()>,2,"Get the length of the reordered text resulting from the last call to setPara() . This length may be different from the length
 of the source text if option OPTION_INSERT_MARKS or option OPTION_REMOVE_CONTROLS has been set. This resulting length is the one to consider in the following cases: maximum value of the visualIndex argument of getLogicalIndex 
number of elements returned by getVisualMap",,"int The length of the reordered text resulting from
         the last call to setPara . |||",29
"<android.graphics.Paint: float getTextRunAdvances(char,int,int,int,int,boolean,float,int)>",0,"Retrieve the character advances of the text.

 Returns the total advance width for the characters in the run from index for count of chars and if advances is not null the advance assigned to each of
 these characters (java chars). The trailing surrogate in a valid surrogate pair is assigned an advance of 0.  Thus the
 number of returned advances is always equal to count not to the number of unicode codepoints
 represented by the run. In the case of conjuncts or combining marks the total advance is assigned to the first
 logical character and the following characters are assigned an advance of 0. This generates the sum of the advances of glyphs for characters in a reordered cluster as the
 width of the first logical character in the cluster and 0 for the widths of all other
 characters in the cluster.  In effect such clusters are treated like conjuncts. The shaping bounds limit the amount of context available outside start and end that can be
 used for shaping analysis.  These bounds typically reflect changes in bidi level or font
 metrics across which shaping does not occur.","chars char : the text to measure.
This value must never be null . |||
index int : the index of the first character to measure
Value is 0 or greater |||
count int : the number of characters to measure
Value is 0 or greater |||
contextIndex int : the index of the first character to use for shaping context.
Context must cover the measureing target.
Value is 0 or greater |||
contextCount int : the number of character to use for shaping context.
Context must cover the measureing target.
Value is 0 or greater |||
isRtl boolean : whether the run is in RTL direction |||
advances float : array to receive the advances must have room for all advances.
This can be null if only total advance is needed
This value may be null . |||
advancesIndex int : the position in advances at which to put the advance corresponding to
the character at start
Value is 0 or greater |||",float the total advance in pixels |||,29
<android.graphics.text.LineBreaker.Result: boolean hasLineTab(int)>,0,Returns true if the line has a TAB character.,lineIndex int : an index of the line. |||,boolean true if the line has a TAB character |||,29
<android.app.Notification.BubbleMetadata.Builder: Notification.BubbleMetadata.Builder setIcon(Icon)>,1,"This method was deprecated
      in API level R. use createIntentBubble(android.app.PendingIntent android.graphics.drawable.Icon) or createShortcutBubble(java.lang.String) instead.",icon Icon : This value must never be null . |||,Notification.BubbleMetadata.Builder This value will never be null . |||,29
<android.view.View: void setAccessibilityPaneTitle(CharSequence)>,1,"Visually distinct portion of a window with window-like semantics are considered panes for
 accessibility purposes. One example is the content view of a fragment that is replaced.
 In order for accessibility services to understand a pane's window-like behavior panes
 should have descriptive titles. Views with pane titles produce AccessibilityEvent s
 when they appear disappear or change title. Related XML Attributes: android:accessibilityPaneTitle","accessibilityPaneTitle CharSequence : The pane's title. Setting to null indicates that this
View is not a pane.
This value may be null . |||",,28
<android.app.slice.Slice: List getHints()>,0,,,"List < String > All hints associated with this Slice.
 
 Value is HINT_TITLE  HINT_LIST  HINT_LIST_ITEM  HINT_LARGE  HINT_ACTIONS  HINT_SELECTED  HINT_NO_TINT  HINT_SHORTCUT android.app.slice.Slice.HINT_TOGGLE HINT_HORIZONTAL  HINT_PARTIAL  HINT_SEE_MORE  HINT_KEYWORDS  HINT_ERROR  HINT_TTL  HINT_LAST_UPDATED or HINT_PERMISSION_REQUEST |||",28
<android.media.audiofx.DynamicsProcessing.Config: float getInputGainByChannelIndex(int)>,0,Gets inputGain value in decibels (dB) for channel indicated by channelIndex,channelIndex int : index of channel of interest |||,float inputGain value in decibels (dB). 0 dB means no change. |||,28
<android.webkit.TracingConfig: int getTracingMode()>,0,Returns the tracing mode of this configuration.,,"int The tracing mode of this configuration.
 
 Value is RECORD_UNTIL_FULL or RECORD_CONTINUOUSLY |||",28
<android.webkit.TracingConfig.Builder: TracingConfig.Builder setTracingMode(int)>,1,"Sets the tracing mode for this configuration.
 When tracingMode is not set explicitly the default is TracingConfig.RECORD_CONTINUOUSLY .","tracingMode int : The tracing mode to use one of TracingConfig.RECORD_UNTIL_FULL or TracingConfig.RECORD_CONTINUOUSLY .
Value is TracingConfig.RECORD_UNTIL_FULL or TracingConfig.RECORD_CONTINUOUSLY |||",TracingConfig.Builder The builder to facilitate chaining. |||,28
<android.view.contentcapture.ContentCaptureSession: void setContentCaptureContext(ContentCaptureContext)>,1,Sets the ContentCaptureContext associated with the session. Typically used to change the context associated with the default session from an activity.,context ContentCaptureContext : This value may be null . |||,,29
<android.net.wifi.WifiNetworkSpecifier.Builder: WifiNetworkSpecifier.Builder setBssid(MacAddress)>,1,"Set the BSSID to use for filtering networks from scan results. Will only match network
 whose BSSID is identical to the specified value.","bssid MacAddress : BSSID of the network.
This value must never be null . |||","WifiNetworkSpecifier.Builder Instance of Builder to enable chaining of the builder method.
 
 This value will never be null . |||",29
<android.service.voice.VoiceInteractionService: void setUiHints(Bundle)>,1,Provide hints to be reflected in the system UI.,"hints Bundle : Arguments used to show UI.
This value must never be null . |||",,29
"<android.view.SurfaceControl.Transaction: SurfaceControl.Transaction setVisibility(SurfaceControl,boolean)>",2,Toggle the visibility of a given Layer and it's sub-tree.,"sc SurfaceControl : The SurfaceControl for which to set the visibility
This value must never be null . |||
visible boolean : The new visibility |||","SurfaceControl.Transaction This transaction object.
 
 This value will never be null . |||",29
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setMvnoType(int)>,2,Sets the MVNO match type for this APN.,"mvnoType int : the MVNO match type to set for this APN
Value is ApnSetting.MVNO_TYPE_SPN  ApnSetting.MVNO_TYPE_IMSI  ApnSetting.MVNO_TYPE_GID or ApnSetting.MVNO_TYPE_ICCID |||",ApnSetting.Builder This value will never be null . |||,28
<android.net.wifi.WifiNetworkSuggestion.Builder: WifiNetworkSuggestion.Builder setWpa2EnterpriseConfig(WifiEnterpriseConfig)>,1,"Set the associated enterprise configuration for this network. Needed for authenticating
 to WPA2-EAP networks. See WifiEnterpriseConfig for description.","enterpriseConfig WifiEnterpriseConfig : Instance of WifiEnterpriseConfig .
This value must never be null . |||","WifiNetworkSuggestion.Builder Instance of Builder to enable chaining of the builder method.
 
 This value will never be null . |||",29
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: Set getOutputSizes(int)>,0,Get a list of sizes compatible with the requested image format . For more information refer to StreamConfigurationMap#getOutputSizes .,format int : an image format from ImageFormat or PixelFormat Value is ImageFormat.UNKNOWN  ImageFormat.RGB_565  ImageFormat.YV12  ImageFormat.Y8 android.graphics.ImageFormat.Y16 ImageFormat.NV16  ImageFormat.NV21  ImageFormat.YUY2  ImageFormat.JPEG  ImageFormat.DEPTH_JPEG  ImageFormat.YUV_420_888  ImageFormat.YUV_422_888  ImageFormat.YUV_444_888  ImageFormat.FLEX_RGB_888  ImageFormat.FLEX_RGBA_8888  ImageFormat.RAW_SENSOR  ImageFormat.RAW_PRIVATE  ImageFormat.RAW10  ImageFormat.RAW12  ImageFormat.DEPTH16  ImageFormat.DEPTH_POINT_CLOUD android.graphics.ImageFormat.RAW_DEPTH ImageFormat.PRIVATE or ImageFormat.HEIC |||,"Set < Size > a non-modifiable set of supported sizes
          or null if the format is not a supported output |||",29
<android.view.textclassifier.TextLanguage.Request: CharSequence getText()>,0,Returns the text to process.,,CharSequence This value will never be null . |||,29
<android.media.AudioRecord: AudioRecordingConfiguration getActiveRecordingConfiguration()>,0,Returns the current active audio recording for this audio recorder.,,"AudioRecordingConfiguration a valid AudioRecordingConfiguration if this recorder is active
 or null otherwise. |||",29
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setUser(String)>,1,Sets the APN username of the APN.,"user String : the APN username to set for the APN
This value may be null . |||",ApnSetting.Builder This value will never be null . |||,28
<android.icu.text.CaseMap.Lower: CaseMap.Lower omitUnchangedText()>,2,"Returns an instance that behaves like this one but
 omits unchanged text when case-mapping with Edits .",,CaseMap.Lower an options object with this option. |||,29
<android.net.wifi.WifiNetworkSuggestion.Builder: WifiNetworkSuggestion.Builder setIsEnhancedOpen(boolean)>,2,Specifies whether this represents an Enhanced Open (OWE) network.,isEnhancedOpen boolean : true to indicate that the network used enhanced open false otherwise. |||,"WifiNetworkSuggestion.Builder Instance of Builder to enable chaining of the builder method.
 
 This value will never be null . |||",29
