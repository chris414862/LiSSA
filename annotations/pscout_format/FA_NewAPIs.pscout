<android.app.UiAutomation: void revokeRuntimePermission(String,String)> -> _NONE_
<android.graphics.ImageDecoder: void finalize()> -> _NONE_
<android.text.style.TextAppearanceSpan: String getFontFeatureSettings()> -> _NONE_
<android.location.LocationManager: boolean isLocationEnabled()> -> _SOURCE_
<android.media.MediaFormat: Set getKeys()> -> _SOURCE_
<android.content.pm.PackageManager: boolean isPackageSuspended(String)> -> _NONE_
<android.telephony.emergency.EmergencyNumber: boolean isFromSources(int)> -> _SOURCE_
<android.icu.text.BreakIterator: void setText(CharSequence)> -> _NONE_
<android.graphics.text.LineBreaker.ParagraphConstraints: float getFirstWidth()> -> _NONE_
<android.widget.Magnifier: int getSourceWidth()> -> _NONE_
<android.app.slice.SliceManager: List getPinnedSlices()> -> _NONE_
<android.app.AppOpsManager: void startWatchingMode(String,String,int,AppOpsManager.OnOpChangedListener)> -> _NONE_
<android.system.StructTimeval: long toMillis()> -> _NONE_
<android.view.ViewGroup: int getChildDrawingOrder(int)> -> _NONE_
<android.app.admin.DevicePolicyManager: boolean setTime(ComponentName,long)> -> _NONE_
<android.telephony.TelephonyManager: CharSequence getSimCarrierIdName()> -> _SOURCE_
<android.text.PrecomputedText.Params: boolean equals(Object)> -> _NONE_
<android.graphics.drawable.ColorStateListDrawable: void unscheduleDrawable(Drawable,Runnable)> -> _NONE_
<android.view.ViewTreeObserver: boolean unregisterFrameCommitCallback(Runnable)> -> _NONE_
<android.view.contentcapture.ContentCaptureSession: void setContentCaptureContext(ContentCaptureContext)> -> _SINK_
<android.net.wifi.rtt.RangingResult: int getStatus()> -> _SOURCE_
<android.graphics.RenderNode: float getPivotX()> -> _NONE_
<android.bluetooth.BluetoothHearingAid: int getConnectionState(BluetoothDevice)> -> _SOURCE_
<android.media.Session2Command: void writeToParcel(Parcel,int)> -> _NONE_
<android.service.autofill.CustomDescription.Builder: CustomDescription.Builder addChild(int,Transformation)> -> _NONE_
<android.media.MediaDrm: void clearOnSessionLostStateListener()> -> _NONE_
<android.content.pm.PackageInstaller.SessionParams: void setMultiPackage()> -> _NONE_
<android.app.WallpaperInfo: boolean supportsMultipleDisplays()> -> _NONE_
<android.app.slice.Slice.Builder: Slice build()> -> _NONE_
<android.media.MicrophoneInfo: String getDescription()> -> _SOURCE_
<android.media.AudioTrack: void setOffloadDelayPadding(int,int)> -> _NONE_
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: Set getInputFormats()> -> _SOURCE_
<android.content.pm.PackageInstaller.SessionInfo: int getParentSessionId()> -> _NONE_
<android.telephony.ServiceState: int getCdmaNetworkId()> -> _SOURCE_
<android.icu.text.CaseMap: CaseMap.Upper toUpper()> -> _NONE_
<android.bluetooth.BluetoothHidDevice: boolean connect(BluetoothDevice)> -> _NONE_
<android.se.omapi.Channel: boolean isOpen()> -> _NONE_
<android.net.wifi.WifiNetworkSuggestion.Builder: WifiNetworkSuggestion.Builder setIsEnhancedOpen(boolean)> -> _SOURCE_
<android.app.admin.DeviceAdminReceiver: void onUserStopped(Context,Intent,UserHandle)> -> _SINK_
<android.webkit.TracingController: boolean stop(OutputStream,Executor)> -> _SINK_
<android.view.contentcapture.ContentCaptureContext: Bundle getExtras()> -> _SOURCE_
<android.widget.Switch: BlendMode getTrackTintBlendMode()> -> _NONE_
<android.text.PrecomputedText.Params: TextDirectionHeuristic getTextDirection()> -> _NONE_
<android.hardware.camera2.params.SessionConfiguration: int describeContents()> -> _SOURCE_
<android.service.wallpaper.WallpaperService.Engine: void notifyColorsChanged()> -> _NONE_
<android.graphics.Paint: float getShadowLayerDy()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.MbcBand: String toString()> -> _NONE_
<android.database.sqlite.SQLiteQueryBuilder: SQLiteDatabase.CursorFactory getCursorFactory()> -> _SOURCE_
<android.service.notification.NotificationListenerService.Ranking: int getUserSentiment()> -> _SOURCE_
<android.service.notification.ZenPolicy.Builder: ZenPolicy.Builder allowEvents(boolean)> -> _NONE_
<android.telephony.SubscriptionPlan.Builder: SubscriptionPlan.Builder setTitle(CharSequence)> -> _NONE_
<android.icu.text.Transliterator: String transliterate(String)> -> _NONE_
<android.telephony.euicc.EuiccManager: EuiccManager createForCardId(int)> -> _SOURCE_
<android.telephony.CellIdentityNr: String getMncString()> -> _SOURCE_
<android.telecom.TelecomManager: void acceptHandover(Uri,int,PhoneAccountHandle)> -> _NONE_
<android.content.pm.PackageInstaller.SessionInfo: Uri getReferrerUri()> -> _SOURCE_
<android.text.PrecomputedText: String toString()> -> _NONE_
<android.icu.text.Bidi: boolean isInverse()> -> _NONE_
<android.view.textclassifier.TextLanguage: String toString()> -> _SOURCE_
<android.graphics.drawable.AnimatedImageDrawable: void setColorFilter(ColorFilter)> -> _NONE_
<android.app.Notification.BubbleMetadata.Builder: Notification.BubbleMetadata.Builder setSuppressNotification(boolean)> -> _NONE_
<android.widget.RemoteViews.RemoteResponse: RemoteViews.RemoteResponse addSharedElement(int,String)> -> _NONE_
<android.graphics.RecordingCanvas: int getMaximumBitmapHeight()> -> _NONE_
<android.graphics.fonts.Font: String toString()> -> _NONE_
<android.net.MacAddress: byte toByteArray()> -> _SOURCE_
<android.telephony.TelephonyManager.CellInfoCallback: void onError(int,Throwable)> -> _NONE_
<android.telephony.PhoneNumberUtils: String calledPartyBCDFragmentToString(byte,int,int,int)> -> _NONE_
<android.media.AudioTrack: int getOffloadPadding()> -> _NONE_
<android.view.WindowInsets: Insets getSystemWindowInsets()> -> _NONE_
<android.service.autofill.UserData.Builder: UserData build()> -> _SOURCE_
<android.widget.AbsListView: void setEdgeEffectColor(int)> -> _NONE_
<android.media.session.MediaController.PlaybackInfo: int describeContents()> -> _SOURCE_
<android.view.textclassifier.TextLinks.Request.Builder: TextLinks.Request.Builder setEntityConfig(TextClassifier.EntityConfig)> -> _NONE_
<android.view.textclassifier.ConversationActions.Request.Builder: ConversationActions.Request.Builder setHints(List)> -> _NONE_
<android.telephony.SubscriptionPlan.Builder: SubscriptionPlan.Builder setDataUsage(long,long)> -> _SOURCE_
<android.net.wifi.WifiNetworkSpecifier.Builder: WifiNetworkSpecifier.Builder setIsHiddenSsid(boolean)> -> _SOURCE_
<android.media.Session2Token: int getType()> -> _NONE_
<android.icu.text.CaseMap.Lower: A apply(Locale,CharSequence,A,Edits)> -> _NONE_
<android.view.autofill.AutofillManager: ComponentName getAutofillServiceComponentName()> -> _NONE_
<android.security.ConfirmationCallback: void onError(Throwable)> -> _NONE_
<android.view.textclassifier.TextClassification: void writeToParcel(Parcel,int)> -> _NONE_
<android.app.admin.DevicePolicyManager: int startUserInBackground(ComponentName,UserHandle)> -> _NONE_
<android.app.Person: Icon getIcon()> -> _SOURCE_
<android.opengl.EGL15: boolean eglGetSyncAttrib(EGLDisplay,EGLSync,int,long,int)> -> _NONE_
<android.media.Image: HardwareBuffer getHardwareBuffer()> -> _NONE_
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: boolean isOutputSupportedFor(int)> -> _NONE_
<android.view.contentcapture.ContentCaptureCondition: int hashCode()> -> _NONE_
<android.hardware.camera2.CameraDevice: boolean isSessionConfigurationSupported(SessionConfiguration)> -> _NONE_
<android.net.wifi.WifiNetworkSpecifier.Builder: WifiNetworkSpecifier.Builder setBssid(MacAddress)> -> _SOURCE_
<android.telecom.Connection: void onStopRtt()> -> _NONE_
<android.telephony.ServiceState: int getCellBandwidths()> -> _SOURCE_
<android.app.slice.Slice.Builder: Slice.Builder addBundle(Bundle,String,List)> -> _NONE_
<android.view.View: void setAutofillId(AutofillId)> -> _NONE_
<android.media.MediaFormat: Number getNumber(String,Number)> -> _SOURCE_
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: Set getInputSizes(int)> -> _NONE_
<android.telephony.data.ApnSetting: boolean isEnabled()> -> _NONE_
<android.icu.text.Bidi: void setPara(char,byte,byte)> -> _NONE_
<android.media.MediaCodecInfo: boolean isVendor()> -> _NONE_
<android.graphics.fonts.Font.Builder: Font.Builder setFontVariationSettings(String)> -> _NONE_
<android.graphics.drawable.AnimatedImageDrawable: void registerAnimationCallback(Animatable2.AnimationCallback)> -> _NONE_
<android.view.contentcapture.ContentCaptureContext.Builder: ContentCaptureContext build()> -> _SOURCE_
<android.service.notification.NotificationListenerService: void clearRequestedListenerHints()> -> _NONE_
<android.database.sqlite.SQLiteDatabase.OpenParams.Builder: SQLiteDatabase.OpenParams.Builder setIdleConnectionTimeout(long)> -> _NONE_
<android.net.wifi.p2p.WifiP2pManager: void requestDiscoveryState(WifiP2pManager.Channel,WifiP2pManager.DiscoveryStateListener)> -> _NONE_
<android.graphics.ImageDecoder: void close()> -> _NONE_
<android.telephony.AvailableNetworkInfo: int getPriority()> -> _SOURCE_
<android.os.Build.Partition: String getName()> -> _SOURCE_
<android.view.contentcapture.ContentCaptureSessionId: String toString()> -> _SOURCE_
<android.app.Notification.BubbleMetadata: int getDesiredHeight()> -> _NONE_
<android.app.admin.DevicePolicyManager: void setDefaultSmsApplication(ComponentName,String)> -> _SINK_
<android.widget.ProgressBar: void setMinHeight(int)> -> _NONE_
<android.net.wifi.rtt.ResponderLocation: int describeContents()> -> _SOURCE_
<android.media.MediaMetadataRetriever: Bitmap getScaledFrameAtTime(long,int,int,int)> -> _SOURCE_
<android.telephony.euicc.EuiccManager: void downloadSubscription(DownloadableSubscription,boolean,PendingIntent)> -> _NONE_
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setApnName(String)> -> _NONE_
<android.telephony.AvailableNetworkInfo: String toString()> -> _SOURCE_
<android.bluetooth.le.ScanFilter: ParcelUuid getServiceSolicitationUuidMask()> -> _SOURCE_
<android.view.textclassifier.TextClassification.Request.Builder: TextClassification.Request.Builder setDefaultLocales(LocaleList)> -> _NONE_
<android.service.autofill.FillResponse.Builder: FillResponse.Builder setUserData(UserData)> -> _SOURCE_
<android.widget.TextView: void setLastBaselineToBottomHeight(int)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config: void setChannelTo(int,DynamicsProcessing.Channel)> -> _NONE_
<android.telephony.CellIdentity: int hashCode()> -> _NONE_
<android.location.Location: double getElapsedRealtimeUncertaintyNanos()> -> _NONE_
<android.security.keystore.WrappedKeyEntry: String getWrappingKeyAlias()> -> _NONE_
<android.media.AudioManager: int getStreamMinVolume(int)> -> _NONE_
<android.graphics.fonts.Font: ByteBuffer getBuffer()> -> _NONE_
<android.telephony.SubscriptionPlan: void writeToParcel(Parcel,int)> -> _NONE_
<android.view.DisplayCutout: int hashCode()> -> _NONE_
<android.service.autofill.TextValueSanitizer: int describeContents()> -> _NONE_
<android.app.NotificationManager: void setNotificationDelegate(String)> -> _NONE_
<android.telephony.mbms.FileServiceInfo: int describeContents()> -> _SOURCE_
<android.telephony.CellInfoTdscdma: int describeContents()> -> _SOURCE_
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setMmsc(Uri)> -> _SOURCE_
<android.content.pm.PackageInstaller.Session: int getParentSessionId()> -> _NONE_
<android.telephony.TelephonyManager: CharSequence getSimSpecificCarrierIdName()> -> _SOURCE_
<android.provider.MediaStore: Uri setRequireOriginal(Uri)> -> _NONE_
<android.icu.text.Bidi: boolean baseIsLeftToRight()> -> _NONE_
<android.se.omapi.Session: Channel openLogicalChannel(byte,byte)> -> _NONE_
<android.app.Notification.BubbleMetadata.Builder: Notification.BubbleMetadata.Builder setDesiredHeight(int)> -> _NONE_
<android.widget.PopupWindow: void setEpicenterBounds(Rect)> -> _NONE_
<android.view.WindowInsets: WindowInsets inset(int,int,int,int)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Limiter: float getPostGain()> -> _NONE_
<android.text.PrecomputedText: int getSpanStart(Object)> -> _NONE_
<android.graphics.drawable.ColorStateListDrawable: int getAlpha()> -> _NONE_
<android.view.textclassifier.TextClassification: String getId()> -> _NONE_
<android.graphics.Canvas: void drawDoubleRoundRect(RectF,float,float,RectF,float,float,Paint)> -> _NONE_
<android.util.ArrayMap: int indexOfValue(Object)> -> _NONE_
<android.icu.util.LocaleData: LocaleData.PaperSize getPaperSize(ULocale)> -> _NONE_
<android.webkit.TracingConfig: int getPredefinedCategories()> -> _NONE_
<android.net.ssl.SSLEngines: void setUseSessionTickets(SSLEngine,boolean)> -> _NONE_
<android.app.Notification.BubbleMetadata.Builder: Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)> -> _NONE_
<android.accessibilityservice.AccessibilityServiceInfo: void setInteractiveUiTimeoutMillis(int)> -> _NONE_
<android.graphics.text.MeasuredText.Builder: MeasuredText.Builder appendStyleRun(Paint,int,boolean)> -> _NONE_
<android.telephony.SubscriptionManager: boolean canManageSubscription(SubscriptionInfo)> -> _NONE_
<android.service.wallpaper.WallpaperService.Engine: WallpaperColors onComputeColors()> -> _NONE_
<android.app.UiAutomation: void grantRuntimePermission(String,String)> -> _NONE_
<android.telephony.mbms.DownloadRequest.Builder: DownloadRequest.Builder setAppIntent(Intent)> -> _SINK_
<android.webkit.WebView: void disableWebView()> -> _NONE_
<android.app.AppComponentFactory: ClassLoader instantiateClassLoader(ClassLoader,ApplicationInfo)> -> _NONE_
<android.text.style.LineHeightSpan.Standard: int getSpanTypeId()> -> _NONE_
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setApnTypeBitmask(int)> -> _NONE_
<android.app.job.JobInfo.Builder: JobInfo.Builder setRequiredNetwork(NetworkRequest)> -> _SOURCE_
<android.view.Display: DisplayCutout getCutout()> -> _NONE_
<android.media.MediaController2: void close()> -> _NONE_
<android.icu.text.BidiClassifier: void setContext(Object)> -> _NONE_
<android.app.Person: boolean isImportant()> -> _SOURCE_
<android.media.session.MediaController.TransportControls: void setPlaybackSpeed(float)> -> _NONE_
<android.view.textclassifier.TextSelection.Request: void writeToParcel(Parcel,int)> -> _NONE_
<android.view.View: View.AccessibilityDelegate getAccessibilityDelegate()> -> _NONE_
<android.view.textclassifier.TextClassificationContext: String getWidgetType()> -> _NONE_
<android.telephony.CellIdentityTdscdma: String getMobileNetworkOperator()> -> _SOURCE_
<android.graphics.RenderNode: float getScaleY()> -> _NONE_
<android.opengl.EGL15: EGLImage eglCreateImage(EGLDisplay,EGLContext,int,long,long,int)> -> _NONE_
<android.net.wifi.p2p.WifiP2pConfig.Builder: WifiP2pConfig.Builder setNetworkName(String)> -> _SOURCE_
<android.graphics.drawable.AnimatedImageDrawable: int getIntrinsicWidth()> -> _NONE_
<android.icu.text.DecimalFormatSymbols: String getMinusSignString()> -> _NONE_
<android.hardware.camera2.CameraManager: void registerAvailabilityCallback(Executor,CameraManager.AvailabilityCallback)> -> _NONE_
<android.view.textclassifier.TextClassification.Request: String getCallingPackageName()> -> _NONE_
<android.widget.HorizontalScrollView: int getLeftEdgeEffectColor()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config.Builder: DynamicsProcessing.Config.Builder setChannelTo(int,DynamicsProcessing.Channel)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config: void setPreEqBandAllChannelsTo(int,DynamicsProcessing.EqBand)> -> _NONE_
<android.media.audiofx.DynamicsProcessing: void setMbcAllChannelsTo(DynamicsProcessing.Mbc)> -> _NONE_
<android.graphics.ImageDecoder.ImageInfo: Size getSize()> -> _SOURCE_
<android.telephony.CellIdentityTdscdma: void writeToParcel(Parcel,int)> -> _NONE_
<android.service.voice.VoiceInteractionSession.ActivityId: boolean equals(Object)> -> _NONE_
<android.media.SubtitleData: long getStartTimeUs()> -> _NONE_
<android.graphics.drawable.ColorStateListDrawable: int getOpacity()> -> _NONE_
<android.view.DisplayCutout: Rect getBoundingRectTop()> -> _NONE_
<android.telephony.SubscriptionManager: void setSubscriptionOverrideUnmetered(int,boolean,long)> -> _NONE_
<android.appwidget.AppWidgetHostView: void setOnLightBackground(boolean)> -> _NONE_
<android.service.autofill.FieldClassification.Match: float getScore()> -> _NONE_
<android.icu.text.Bidi: int getRunCount()> -> _NONE_
<android.bluetooth.BluetoothHidDevice: List getConnectedDevices()> -> _SOURCE_
<android.text.PrecomputedText: T getSpans(int,int,Class)> -> _NONE_
<android.graphics.drawable.InsetDrawable: Insets getOpticalInsets()> -> _NONE_
<android.app.backup.FullBackupDataOutput: int getTransportFlags()> -> _SOURCE_
<android.telephony.emergency.EmergencyNumber: List getEmergencyUrns()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing: void setInputGainAllChannelsTo(float)> -> _NONE_
<android.app.admin.DevicePolicyManager: int getPasswordComplexity()> -> _SOURCE_
<android.bluetooth.BluetoothHidDevice.Callback: void onConnectionStateChanged(BluetoothDevice,int)> -> _SINK_
<android.media.audiofx.DynamicsProcessing.Config: void setInputGainAllChannelsTo(float)> -> _NONE_
<android.telephony.mbms.FileInfo: int describeContents()> -> _SOURCE_
<android.widget.ListPopupWindow: Rect getEpicenterBounds()> -> _NONE_
<android.view.textclassifier.SelectionEvent: void writeToParcel(Parcel,int)> -> _NONE_
<android.view.textclassifier.TextClassifier.EntityConfig.Builder: TextClassifier.EntityConfig.Builder setIncludedTypes(Collection)> -> _NONE_
<android.widget.SearchView: boolean isIconifiedByDefault()> -> _NONE_
<android.media.MediaFormat: String getString(String,String)> -> _SOURCE_
<android.telephony.emergency.EmergencyNumber: List getEmergencyServiceCategories()> -> _NONE_
<android.telephony.TelephonyManager: int getSimSpecificCarrierId()> -> _SOURCE_
<android.icu.text.RelativeDateTimeFormatter: String formatNumeric(double,RelativeDateTimeFormatter.RelativeDateTimeUnit)> -> _NONE_
<android.view.contentcapture.ContentCaptureContext: LocusId getLocusId()> -> _SOURCE_
<android.app.AppComponentFactory: Application instantiateApplication(ClassLoader,String)> -> _NONE_
<android.media.Session2Command: Bundle getCustomExtras()> -> _NONE_
<android.content.pm.PackageManager: Bundle getSuspendedPackageAppExtras()> -> _SOURCE_
<android.view.textclassifier.TextLanguage.Builder: TextLanguage.Builder putLocale(ULocale,float)> -> _SOURCE_
<android.net.wifi.rtt.ResponderLocation: void writeToParcel(Parcel,int)> -> _NONE_
<android.view.textclassifier.SelectionEvent: int getSmartStart()> -> _NONE_
<android.telephony.MbmsStreamingSession: void close()> -> _NONE_
<android.text.PrecomputedText: int getSpanFlags(Object)> -> _NONE_
<android.bluetooth.le.ScanFilter.Builder: ScanFilter.Builder setServiceSolicitationUuid(ParcelUuid)> -> _SOURCE_
<android.graphics.drawable.VectorDrawable: void setTintBlendMode(BlendMode)> -> _NONE_
<android.os.Handler: Handler createAsync(Looper)> -> _NONE_
<android.view.textclassifier.TextLanguage: String getId()> -> _NONE_
<android.icu.text.Edits: Edits.Iterator getCoarseIterator()> -> _NONE_
<android.app.Person.Builder: Person.Builder setUri(String)> -> _NONE_
<android.graphics.Bitmap: Bitmap createBitmap(Picture)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.MbcBand: void setExpanderRatio(float)> -> _NONE_
<android.widget.ToggleButton: float getDisabledAlpha()> -> _NONE_
<android.hardware.camera2.CameraCaptureSession: int captureBurstRequests(List,Executor,CameraCaptureSession.CaptureCallback)> -> _SOURCE_
<android.telephony.mbms.ServiceInfo: int hashCode()> -> _NONE_
<android.graphics.ImageDecoder: ImageDecoder.Source createSource(ByteBuffer)> -> _SOURCE_
<android.text.DynamicLayout.Builder: DynamicLayout.Builder setEllipsize(TextUtils.TruncateAt)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config: int getPostEqBandCount()> -> _NONE_
<android.widget.TextView: void setTextSelectHandleLeft(int)> -> _NONE_
<android.telephony.CellSignalStrengthGsm: int getBitErrorRate()> -> _SOURCE_
<android.security.keystore.KeyGenParameterSpec.Builder: KeyGenParameterSpec.Builder setIsStrongBoxBacked(boolean)> -> _NONE_
<android.service.carrier.CarrierIdentifier: int getCarrierId()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.Channel: void setMbcBand(int,DynamicsProcessing.MbcBand)> -> _NONE_
<android.hardware.camera2.params.SessionConfiguration: CaptureRequest getSessionParameters()> -> _SOURCE_
<android.telephony.data.ApnSetting: String getUser()> -> _SOURCE_
<android.graphics.Canvas: void enableZ()> -> _NONE_
<android.telephony.CellInfoNr: void writeToParcel(Parcel,int)> -> _NONE_
<android.view.View: int getSourceLayoutResId()> -> _NONE_
<android.hardware.camera2.params.OutputConfiguration: void setPhysicalCameraId(String)> -> _NONE_
<android.telephony.euicc.DownloadableSubscription: void writeToParcel(Parcel,int)> -> _NONE_
<android.os.Build: List getFingerprintedPartitions()> -> _SOURCE_
<android.icu.text.DecimalFormatSymbols: void setPercentString(String)> -> _NONE_
<android.net.LinkProperties: int getMtu()> -> _SOURCE_
<android.telephony.TelephonyManager: int isMultiSimSupported()> -> _SOURCE_
<android.content.pm.PackageInfo: void setLongVersionCode(long)> -> _NONE_
<android.widget.TextView: Drawable getTextSelectHandleLeft()> -> _NONE_
<android.telephony.mbms.MbmsDownloadSessionCallback: void onMiddlewareReady()> -> _NONE_
<android.telephony.data.ApnSetting: String getProxyAddressAsString()> -> _SOURCE_
<android.service.autofill.UserData: int describeContents()> -> _SOURCE_
<android.hardware.biometrics.BiometricPrompt: void authenticate(CancellationSignal,Executor,BiometricPrompt.AuthenticationCallback)> -> _NONE_
<android.telephony.SubscriptionManager: int getSubscriptionIds(int)> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase.OpenParams.Builder: SQLiteDatabase.OpenParams.Builder setErrorHandler(DatabaseErrorHandler)> -> _NONE_
<android.telephony.emergency.EmergencyNumber: String getNumber()> -> _SOURCE_
<android.inputmethodservice.InputMethodService: boolean switchToPreviousInputMethod()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config: void setAllChannelsTo(DynamicsProcessing.Channel)> -> _NONE_
<android.media.MediaSession2.ControllerInfo: int hashCode()> -> _NONE_
<android.net.wifi.rtt.ResponderLocation: boolean equals(Object)> -> _NONE_
<android.view.textclassifier.ConversationActions.Request: List getHints()> -> _NONE_
<android.content.ContentResolver: ParcelFileDescriptor openFile(Uri,String,CancellationSignal)> -> _SOURCE_
<android.graphics.Paint: void setStartHyphenEdit(int)> -> _NONE_
<android.media.MediaSession2.SessionCallback: Session2Command.Result onSessionCommand(MediaSession2,MediaSession2.ControllerInfo,Session2Command,Bundle)> -> _SINK_
<android.service.autofill.VisibilitySetterAction.Builder: VisibilitySetterAction.Builder setVisibility(int,int)> -> _NONE_
<android.graphics.RenderNode: void getMatrix(Matrix)> -> _NONE_
<android.icu.text.Transliterator: String getDisplayName(String)> -> _NONE_
<android.hardware.camera2.CameraDevice: void createCaptureSession(SessionConfiguration)> -> _NONE_
<android.app.Notification.Builder: Notification.Builder setAllowSystemGeneratedContextualActions(boolean)> -> _NONE_
<android.app.Notification.BubbleMetadata.Builder: Notification.BubbleMetadata.Builder setIcon(Icon)> -> _NONE_
<android.view.LayoutInflater: View createView(Context,String,String,AttributeSet)> -> _NONE_
<android.media.MediaMetadataRetriever: Bitmap getImageAtIndex(int)> -> _SOURCE_
<android.view.DisplayCutout: List getBoundingRects()> -> _NONE_
<android.telephony.MbmsGroupCallSession: void close()> -> _NONE_
<android.graphics.BlendModeColorFilter: int getColor()> -> _NONE_
<android.net.wifi.WifiNetworkSpecifier: boolean equals(Object)> -> _NONE_
<android.view.contentcapture.DataRemovalRequest: int describeContents()> -> _NONE_
<android.view.View: void addOnUnhandledKeyEventListener(View.OnUnhandledKeyEventListener)> -> _NONE_
<android.media.MediaSession2Service: void onCreate()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.MbcBand: void setPostGain(float)> -> _NONE_
<android.net.wifi.WifiInfo: int getRxLinkSpeedMbps()> -> _SOURCE_
<android.telephony.AvailableNetworkInfo: int describeContents()> -> _SOURCE_
<android.graphics.text.MeasuredText: void getBounds(int,int,Rect)> -> _NONE_
<android.telephony.CarrierConfigManager: boolean isConfigForIdentifiedCarrier(PersistableBundle)> -> _SOURCE_
<android.telephony.PhoneStateListener: void onUserMobileDataStateChanged(boolean)> -> _NONE_
<android.net.MacAddress: void writeToParcel(Parcel,int)> -> _NONE_
<android.net.DnsResolver: void query(Network,String,int,Executor,CancellationSignal,Callback)> -> _SINK_
<android.system.StructTimeval: String toString()> -> _NONE_
<android.media.MediaDrm: int getMaxSessionCount()> -> _NONE_
<android.text.style.TextAppearanceSpan: int getTextFontWeight()> -> _NONE_
<android.telephony.RadioAccessSpecifier: int getChannels()> -> _NONE_
<android.widget.ScrollView: void setBottomEdgeEffectColor(int)> -> _NONE_
<android.security.keystore.KeyGenParameterSpec: boolean isUserPresenceRequired()> -> _NONE_
<android.app.slice.SliceManager: void grantSlicePermission(String,Uri)> -> _NONE_
<android.view.Window: boolean isWideColorGamut()> -> _NONE_
<android.app.slice.SliceProvider: Uri onMapIntentToUri(Intent)> -> _NONE_
<android.graphics.Bitmap: void setColorSpace(ColorSpace)> -> _NONE_
<android.app.slice.SliceItem: Slice getSlice()> -> _NONE_
<android.se.omapi.Session: void close()> -> _NONE_
<android.database.sqlite.SQLiteDatabase.OpenParams.Builder: SQLiteDatabase.OpenParams.Builder setOpenFlags(int)> -> _NONE_
<android.telephony.NetworkScanRequest: RadioAccessSpecifier getSpecifiers()> -> _SOURCE_
<android.telephony.mbms.MbmsStreamingSessionCallback: void onMiddlewareReady()> -> _NONE_
<android.view.WindowInsets.Builder: WindowInsets.Builder setStableInsets(Insets)> -> _NONE_
<android.view.SurfaceControl.Transaction: SurfaceControl.Transaction setLayer(SurfaceControl,int)> -> _NONE_
<android.view.DisplayCutout: Rect getBoundingRectBottom()> -> _NONE_
<android.hardware.biometrics.BiometricPrompt.AuthenticationResult: BiometricPrompt.CryptoObject getCryptoObject()> -> _NONE_
<android.graphics.drawable.DrawableContainer: Insets getOpticalInsets()> -> _NONE_
<android.provider.MediaStore: Uri getMediaUri(Context,Uri)> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.Config: boolean isPostEqInUse()> -> _NONE_
<android.telephony.TelephonyManager: int getPreferredOpportunisticDataSubscription()> -> _SOURCE_
<android.telephony.TelephonyManager: String getManufacturerCode(int)> -> _SOURCE_
<android.service.autofill.SaveInfo.Builder: SaveInfo.Builder setCustomDescription(CustomDescription)> -> _SINK_
<android.net.SocketKeepalive.Callback: void onStopped()> -> _NONE_
<android.graphics.Paint: float getTextRunAdvances(char,int,int,int,int,boolean,float,int)> -> _NONE_
<android.icu.text.Transliterator.Position: String toString()> -> _NONE_
<android.telephony.SubscriptionManager: boolean setOpportunistic(boolean,int)> -> _NONE_
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setProxyAddress(String)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Channel: float getInputGain()> -> _NONE_
<android.view.DisplayCutout: int getSafeInsetTop()> -> _NONE_
<android.net.LinkProperties: void setDomains(String)> -> _NONE_
<android.widget.Magnifier.Builder: Magnifier.Builder setDefaultSourceToMagnifierOffset(int,int)> -> _NONE_
<android.app.admin.DevicePolicyManager: Set getCrossProfileCalendarPackages(ComponentName)> -> _SOURCE_
<android.service.autofill.BatchUpdates: String toString()> -> _NONE_
<android.net.wifi.aware.WifiAwareNetworkSpecifier.Builder: WifiAwareNetworkSpecifier.Builder setPskPassphrase(String)> -> _NONE_
<android.telephony.CellSignalStrengthNr: int getSsSinr()> -> _SOURCE_
<android.bluetooth.BluetoothHidDevice.Callback: void onSetProtocol(BluetoothDevice,byte)> -> _SINK_
<android.webkit.WebView: void setWebViewRenderProcessClient(Executor,WebViewRenderProcessClient)> -> _NONE_
<android.telephony.emergency.EmergencyNumber: boolean equals(Object)> -> _NONE_
<android.os.PowerManager: void removeThermalStatusListener(PowerManager.OnThermalStatusChangedListener)> -> _NONE_
<android.view.View: void setHorizontalScrollbarTrackDrawable(Drawable)> -> _NONE_
<android.net.wifi.rtt.RangingRequest.Builder: void addWifiAwarePeer()> -> _NONE_
<android.app.usage.EventStats: long getLastTimeStamp()> -> _NONE_
<android.view.textclassifier.TextLinks.TextLink: String getEntity(int)> -> _NONE_
<android.os.Parcel: void writeTypedArrayMap(ArrayMap,int)> -> _NONE_
<android.view.textclassifier.TextClassificationContext: String getPackageName()> -> _NONE_
<android.telephony.MbmsDownloadSession: MbmsDownloadSession create(Context,Executor,int,MbmsDownloadSessionCallback)> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing: DynamicsProcessing.Mbc getMbcByChannelIndex(int)> -> _NONE_
<android.media.AudioRecordingConfiguration: int getAudioSource()> -> _SOURCE_
<android.app.AutomaticZenRule: ZenPolicy getZenPolicy()> -> _NONE_
<android.hardware.camera2.params.SessionConfiguration: Executor getExecutor()> -> _NONE_
<android.telecom.Connection.RttTextStream: String read()> -> _SOURCE_
<android.telephony.TelephonyManager: String getManufacturerCode()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.Limiter: String toString()> -> _NONE_
<android.content.pm.PackageManager: void getWhitelistedRestrictedPermissions()> -> _NONE_
<android.graphics.drawable.AnimatedImageDrawable: void start()> -> _NONE_
<android.graphics.drawable.ColorStateListDrawable: void setColorFilter(ColorFilter)> -> _NONE_
<android.graphics.Paint: int getEndHyphenEdit()> -> _NONE_
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setProxyAddress(InetAddress)> -> _NONE_
<android.graphics.fonts.FontFamily: int getSize()> -> _NONE_
<android.provider.MediaStore: String getVolumeName(Uri)> -> _SOURCE_
<android.app.slice.SliceSpec: String toString()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.MbcBand: float getThreshold()> -> _NONE_
<android.view.textclassifier.TextLinks.Request.Builder: TextLinks.Request.Builder setDefaultLocales(LocaleList)> -> _NONE_
<android.graphics.drawable.GradientDrawable: float getThicknessRatio()> -> _NONE_
<android.os.UserManager: boolean requestQuietModeEnabled(boolean,UserHandle)> -> _NONE_
<android.view.textclassifier.ConversationActions.Message: int describeContents()> -> _SOURCE_
<android.bluetooth.BluetoothHearingAid: List getConnectedDevices()> -> _SOURCE_
<android.telephony.CellSignalStrengthNr: int getSsRsrq()> -> _SOURCE_
<android.widget.AutoCompleteTextView: int getInputMethodMode()> -> _NONE_
<android.service.notification.ZenPolicy.Builder: ZenPolicy.Builder allowMessages(int)> -> _NONE_
<android.telecom.ConnectionService: void connectionServiceFocusReleased()> -> _NONE_
<android.media.Session2Token: String getServiceName()> -> _NONE_
<android.view.textclassifier.TextClassification.Request.Builder: TextClassification.Request.Builder setExtras(Bundle)> -> _NONE_
<android.graphics.text.LineBreaker.Builder: LineBreaker build()> -> _NONE_
<android.view.textclassifier.TextClassifierEvent: int getEventType()> -> _NONE_
<android.telecom.TelecomManager: boolean endCall()> -> _NONE_
<android.service.autofill.DateTransformation: int describeContents()> -> _NONE_
<android.telephony.ServiceState: int getCdmaSystemId()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.Channel: void setInputGain(float)> -> _NONE_
<android.view.textclassifier.TextClassifierEvent: int getEventIndex()> -> _NONE_
<javax.net.ssl.SSLSocket: String getHandshakeApplicationProtocol()> -> _NONE_
<android.media.MicrophoneInfo: MicrophoneInfo.Coordinate3F getOrientation()> -> _SOURCE_
<android.service.autofill.UserData: int getMaxUserDataSize()> -> _SOURCE_
<android.telephony.mbms.DownloadRequest: int hashCode()> -> _NONE_
<android.view.WindowInsets: Insets getStableInsets()> -> _NONE_
<android.media.MediaDrm: void setOnKeyStatusChangeListener(Executor,MediaDrm.OnKeyStatusChangeListener)> -> _NONE_
<android.database.sqlite.SQLiteOpenHelper: void setLookasideConfig(int,int)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config: float getInputGainByChannelIndex(int)> -> _NONE_
<android.media.ExifInterface: long getAttributeRange(String)> -> _SOURCE_
<android.os.SharedMemory: ByteBuffer mapReadOnly()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.Channel: DynamicsProcessing.Eq getPostEq()> -> _NONE_
<android.view.textclassifier.ConversationAction.Builder: ConversationAction.Builder setAction(RemoteAction)> -> _SINK_
<android.app.WallpaperColors: Color getSecondaryColor()> -> _SOURCE_
<android.graphics.drawable.AnimatedImageDrawable: ColorFilter getColorFilter()> -> _NONE_
<android.webkit.WebView: void startSafeBrowsing(Context,ValueCallback)> -> _NONE_
<android.graphics.RecordingCanvas: boolean isOpaque()> -> _SOURCE_
<android.widget.Magnifier: void dismiss()> -> _NONE_
<android.app.DirectAction.Builder: DirectAction.Builder setLocusId(LocusId)> -> _NONE_
<android.app.Person: int hashCode()> -> _NONE_
<android.app.slice.SliceSpec: boolean equals(Object)> -> _NONE_
<android.media.MicrophoneInfo: float getMaxSpl()> -> _NONE_
<android.net.IpSecAlgorithm: int describeContents()> -> _SOURCE_
<android.view.View: void transformMatrixToGlobal(Matrix)> -> _NONE_
<android.view.accessibility.AccessibilityNodeInfo: boolean isHeading()> -> _NONE_
<android.view.TouchDelegate: boolean onTouchExplorationHoverEvent(MotionEvent)> -> _NONE_
<android.view.View: void setTransitionVisibility(int)> -> _NONE_
<android.view.View: int getOutlineSpotShadowColor()> -> _NONE_
<android.icu.text.DecimalFormatSymbols: DecimalFormatSymbols forNumberingSystem(Locale,NumberingSystem)> -> _NONE_
<android.icu.text.Bidi: int getProcessedLength()> -> _NONE_
<android.graphics.HardwareRenderer: void stop()> -> _NONE_
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setMmsProxyPort(int)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config: boolean isLimiterInUse()> -> _NONE_
<android.net.IpSecAlgorithm: void writeToParcel(Parcel,int)> -> _NONE_
<android.telephony.SubscriptionInfo: boolean isEmbedded()> -> _NONE_
<android.graphics.fonts.Font: FontVariationAxis getAxes()> -> _NONE_
<android.os.VibrationEffect: VibrationEffect createPredefined(int)> -> _NONE_
<android.graphics.ImageDecoder: void setTargetColorSpace(ColorSpace)> -> _NONE_
<android.bluetooth.BluetoothHidDevice: List getDevicesMatchingConnectionStates(int)> -> _SOURCE_
<android.view.View: int getAttributeResolutionStack(int)> -> _NONE_
<android.appwidget.AppWidgetManager: void updateAppWidgetProviderInfo(ComponentName,String)> -> _SINK_
<android.net.wifi.rtt.RangingResult: int getDistanceStdDevMm()> -> _SOURCE_
<android.net.ssl.SSLSockets: void setUseSessionTickets(SSLSocket,boolean)> -> _NONE_
<android.view.autofill.AutofillManager: void setUserData(UserData)> -> _SINK_
<android.view.textclassifier.TextClassifierEvent.ConversationActionsEvent.Builder: TextClassifierEvent.ConversationActionsEvent build()> -> _NONE_
<android.icu.text.CaseMap.Title: CaseMap.Title wholeString()> -> _NONE_
<android.net.MacAddress: String toOuiString()> -> _SOURCE_
<android.media.AudioPresentation: boolean hasSpokenSubtitles()> -> _NONE_
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: Set getOutputSizes(int)> -> _NONE_
<android.media.ExifInterface: byte getAttributeBytes(String)> -> _SOURCE_
<android.media.AudioPresentation.Builder: AudioPresentation.Builder setProgramId(int)> -> _NONE_
<android.media.MediaSession2.ControllerInfo: String toString()> -> _NONE_
<android.telephony.SmsManager.FinancialSmsCallback: void onFinancialSmsMessages(CursorWindow)> -> _SINK_
<android.text.style.LineBackgroundSpan.Standard: void writeToParcel(Parcel,int)> -> _NONE_
<android.view.textclassifier.TextLanguage.Builder: TextLanguage.Builder setId(String)> -> _NONE_
<android.graphics.ImageDecoder: ImageDecoder.Source createSource(ContentResolver,Uri)> -> _SOURCE_
<javax.net.ssl.SSLParameters: void setApplicationProtocols(String)> -> _NONE_
<android.view.textclassifier.TextClassifier.EntityConfig: TextClassifier.EntityConfig createWithExplicitEntityList(Collection)> -> _NONE_
<android.service.autofill.UserData.Builder: UserData.Builder add(String,String)> -> _SINK_
<android.hardware.camera2.params.OisSample: long getTimestamp()> -> _NONE_
<android.widget.Toolbar: void setCollapseContentDescription(int)> -> _NONE_
<android.telephony.MbmsStreamingSession: MbmsStreamingSession create(Context,Executor,MbmsStreamingSessionCallback)> -> _SOURCE_
<android.graphics.HardwareRenderer: HardwareRenderer.FrameRenderRequest createRenderRequest()> -> _NONE_
<android.app.Notification.MessagingStyle: Notification.MessagingStyle setGroupConversation(boolean)> -> _NONE_
<android.hardware.camera2.params.SessionConfiguration: CameraCaptureSession.StateCallback getStateCallback()> -> _NONE_
<android.net.wifi.aware.WifiAwareNetworkInfo: void writeToParcel(Parcel,int)> -> _NONE_
<android.icu.util.LocaleData: void setNoSubstitute(boolean)> -> _NONE_
<android.app.Notification.BubbleMetadata: boolean getAutoExpandBubble()> -> _NONE_
<android.graphics.text.LineBreaker.Result: float getLineDescent(int)> -> _NONE_
<android.media.MediaMetadataRetriever: void close()> -> _NONE_
<android.webkit.TracingController: boolean isTracing()> -> _NONE_
<android.view.textclassifier.TextClassifier.EntityConfig: boolean shouldIncludeTypesFromTextClassifier()> -> _NONE_
<android.icu.text.CaseMap.Fold: CaseMap.Fold omitUnchangedText()> -> _NONE_
<android.widget.Magnifier: float getZoom()> -> _NONE_
<android.telephony.CellSignalStrengthNr: int getSsRsrp()> -> _SOURCE_
<android.icu.text.Bidi: BidiRun getLogicalRun(int)> -> _NONE_
<android.text.PrecomputedText: PrecomputedText create(CharSequence,PrecomputedText.Params)> -> _NONE_
<android.widget.Toolbar: void setCollapseIcon(Drawable)> -> _NONE_
<android.service.autofill.VisibilitySetterAction.Builder: VisibilitySetterAction build()> -> _NONE_
<android.content.pm.PackageInstaller.SessionInfo: boolean isMultiPackage()> -> _NONE_
<android.telecom.Connection: void sendRttSessionRemotelyTerminated()> -> _NONE_
<android.app.admin.DevicePolicyManager: void wipeData(int,CharSequence)> -> _NONE_
<android.telephony.mbms.DownloadProgressListener: void onProgressUpdated(DownloadRequest,FileInfo,int,int,int,int)> -> _SINK_
<android.security.ConfirmationPrompt: void presentPrompt(Executor,ConfirmationCallback)> -> _NONE_
<android.telephony.TelephonyManager.CellInfoCallback: void onCellInfo(List)> -> _SINK_
<android.media.MicrophoneInfo: int getGroup()> -> _NONE_
<android.telephony.mbms.StreamingService: StreamingServiceInfo getInfo()> -> _SOURCE_
<android.database.sqlite.SQLiteDatabase.OpenParams.Builder: SQLiteDatabase.OpenParams.Builder removeOpenFlags(int)> -> _NONE_
<android.graphics.ImageDecoder: void setMutableRequired(boolean)> -> _NONE_
<android.graphics.text.LineBreaker.Builder: LineBreaker.Builder setJustificationMode(int)> -> _NONE_
<android.net.wifi.p2p.WifiP2pConfig.Builder: WifiP2pConfig.Builder enablePersistentMode(boolean)> -> _NONE_
<android.graphics.ImageDecoder: PostProcessor getPostProcessor()> -> _NONE_
<android.provider.DocumentsProvider: Cursor queryRecentDocuments(String,String,Bundle,CancellationSignal)> -> _SOURCE_
<android.nfc.NfcAdapter: boolean isSecureNfcSupported()> -> _SOURCE_
<android.app.Notification.BubbleMetadata: PendingIntent getIntent()> -> _SOURCE_
<android.graphics.drawable.ColorStateListDrawable: boolean hasFocusStateSpecified()> -> _NONE_
<android.media.MediaDrm: int getMaxSecurityLevel()> -> _NONE_
<android.icu.text.Edits: boolean hasChanges()> -> _NONE_
<android.media.MicrophoneInfo.Coordinate3F: boolean equals(Object)> -> _NONE_
<android.view.DisplayCutout: int getSafeInsetBottom()> -> _NONE_
<android.hardware.biometrics.BiometricPrompt.CryptoObject: Cipher getCipher()> -> _SOURCE_
<android.app.role.RoleManager: boolean isRoleAvailable(String)> -> _NONE_
<android.telephony.mbms.DownloadRequest: Uri getSourceUri()> -> _SOURCE_
<android.view.ViewConfiguration: int getScaledHoverSlop()> -> _NONE_
<android.nfc.NfcAdapter: boolean isSecureNfcEnabled()> -> _SOURCE_
<android.view.contentcapture.ContentCaptureSession: ViewStructure newVirtualViewStructure(AutofillId,long)> -> _SOURCE_
<android.service.autofill.VisibilitySetterAction: void writeToParcel(Parcel,int)> -> _NONE_
<android.telephony.TelephonyManager: int getSimCarrierId()> -> _SOURCE_
<android.net.wifi.rtt.ResponderLocation: SparseArray toCivicLocationSparseArray()> -> _SOURCE_
<android.media.session.MediaController: Bundle getSessionInfo()> -> _SOURCE_
<android.security.keystore.KeyGenParameterSpec.Builder: KeyGenParameterSpec.Builder setUserPresenceRequired(boolean)> -> _NONE_
<android.app.Notification.BubbleMetadata: boolean isNotificationSuppressed()> -> _NONE_
<android.media.MediaDrm: void clearOnExpirationUpdateListener()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config.Builder: DynamicsProcessing.Config.Builder setMbcAllChannelsTo(DynamicsProcessing.Mbc)> -> _NONE_
<android.widget.RemoteViews.RemoteResponse: RemoteViews.RemoteResponse fromFillInIntent(Intent)> -> _SINK_
<android.graphics.text.LineBreaker.Result: float getLineAscent(int)> -> _NONE_
<android.text.PrecomputedText.Params.Builder: PrecomputedText.Params.Builder setTextDirection(TextDirectionHeuristic)> -> _NONE_
<android.media.MediaSession2Service: void addSession(MediaSession2)> -> _SINK_
<android.media.audiofx.DynamicsProcessing.MbcBand: float getNoiseGateThreshold()> -> _NONE_
<android.telephony.mbms.FileServiceInfo: void writeToParcel(Parcel,int)> -> _NONE_
<javax.net.ssl.SSLSocket: String getApplicationProtocol()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing: DynamicsProcessing.Channel getChannelByChannelIndex(int)> -> _NONE_
<android.view.textclassifier.ConversationActions.Request: Bundle getExtras()> -> _NONE_
<android.icu.text.Bidi: void setContext(String,String)> -> _NONE_
<android.content.LocusId: String toString()> -> _SOURCE_
<android.telephony.CellIdentityNr: boolean equals(Object)> -> _NONE_
<android.media.MediaDrm: List getOfflineLicenseKeySetIds()> -> _NONE_
<android.app.admin.DevicePolicyManager: int logoutUser(ComponentName)> -> _NONE_
<android.app.AutomaticZenRule: ComponentName getConfigurationActivity()> -> _NONE_
<android.view.textclassifier.TextClassification.Builder: TextClassification.Builder addAction(RemoteAction)> -> _NONE_
<android.graphics.RenderNode: float getScaleX()> -> _NONE_
<android.hardware.camera2.params.RecommendedStreamConfigurationMap: int getRecommendedUseCase()> -> _NONE_
<android.graphics.RenderNode: boolean hasOverlappingRendering()> -> _NONE_
<android.os.BatteryManager: long computeChargeTimeRemaining()> -> _NONE_
<android.app.job.JobInfo.Builder: JobInfo.Builder setImportantWhileForeground(boolean)> -> _NONE_
<android.view.textclassifier.TextClassification.Builder: TextClassification.Builder setExtras(Bundle)> -> _NONE_
<android.telephony.CellSignalStrengthNr: int getLevel()> -> _SOURCE_
<android.icu.text.Bidi: byte getParaLevel()> -> _NONE_
<android.text.PrecomputedText.Params.Builder: PrecomputedText.Params.Builder setHyphenationFrequency(int)> -> _NONE_
<android.os.SystemClock: Clock currentGnssTimeClock()> -> _NONE_
<android.text.style.LineBackgroundSpan.Standard: int getSpanTypeId()> -> _NONE_
<android.graphics.RenderNode: boolean getClipToBounds()> -> _NONE_
<android.view.autofill.AutofillManager: void notifyViewClicked(View)> -> _SINK_
<android.view.textclassifier.TextLanguage.Request: String getCallingPackageName()> -> _NONE_
<android.view.textclassifier.ConversationActions: List getConversationActions()> -> _NONE_
<android.view.textclassifier.TextClassifier.EntityConfig: int describeContents()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Limiter: float getThreshold()> -> _NONE_
<android.webkit.TracingConfig: int getTracingMode()> -> _NONE_
<android.view.textclassifier.TextClassifierEvent: int describeContents()> -> _NONE_
<android.net.wifi.rtt.ResponderLocation: double getLongitude()> -> _SOURCE_
<android.net.wifi.p2p.WifiP2pConfig.Builder: WifiP2pConfig build()> -> _NONE_
<android.icu.text.DecimalFormatSymbols: String getDecimalSeparatorString()> -> _NONE_
<android.content.pm.PackageInstaller.SessionInfo: int getInstallLocation()> -> _NONE_
<android.media.MediaSession2.Builder: MediaSession2.Builder setSessionActivity(PendingIntent)> -> _SINK_
<android.media.MediaPlayer: void clearOnSubtitleDataListener()> -> _NONE_
<android.service.notification.ZenPolicy: int getPriorityCategoryMedia()> -> _NONE_
<android.telecom.Connection.RttTextStream: String readImmediately()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.Config: void setPreEqByChannelIndex(int,DynamicsProcessing.Eq)> -> _NONE_
<android.app.admin.DevicePolicyManager: CharSequence getEndUserSessionMessage(ComponentName)> -> _NONE_
<android.view.textclassifier.TextClassifierEvent.TextSelectionEvent.Builder: TextClassifierEvent.TextSelectionEvent.Builder setRelativeSuggestedWordEndIndex(int)> -> _NONE_
<android.net.wifi.WifiInfo: String getPasspointFqdn()> -> _SOURCE_
<android.icu.text.BidiRun: byte getDirection()> -> _NONE_
<android.view.textclassifier.ConversationActions.Request.Builder: ConversationActions.Request.Builder setTypeConfig(TextClassifier.EntityConfig)> -> _NONE_
<android.graphics.RecordingCanvas: void drawRenderNode(RenderNode)> -> _NONE_
<android.telephony.CellIdentityTdscdma: int getCid()> -> _SOURCE_
<android.media.MediaCodecInfo.VideoCapabilities.PerformancePoint: boolean covers(MediaFormat)> -> _NONE_
<android.media.MediaRecorder: void addOnRoutingChangedListener(AudioRouting.OnRoutingChangedListener,Handler)> -> _NONE_
<android.telephony.CellIdentityNr: int getNrarfcn()> -> _SOURCE_
<android.view.SurfaceControl.Transaction: SurfaceControl.Transaction setBufferSize(SurfaceControl,int,int)> -> _NONE_
<android.telecom.CallRedirectionService: void redirectCall(Uri,PhoneAccountHandle,boolean)> -> _NONE_
<android.media.MediaSession2.ControllerInfo: int getUid()> -> _SOURCE_
<android.net.SocketKeepalive.Callback: void onError(int)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Channel: DynamicsProcessing.EqBand getPreEqBand(int)> -> _NONE_
<android.telecom.VideoProfile.CameraCapabilities: float getMaxZoom()> -> _NONE_
<android.graphics.RenderNode: boolean setTranslationY(float)> -> _NONE_
<android.service.voice.VoiceInteractionSession: void requestDirectActions(VoiceInteractionSession.ActivityId,CancellationSignal,Executor,Consumer)> -> _NONE_
<android.icu.text.DecimalFormatSymbols: void setMonetaryGroupingSeparatorString(String)> -> _NONE_
<android.service.notification.ZenPolicy: int hashCode()> -> _NONE_
<android.widget.AbsSeekBar: BlendMode getThumbTintBlendMode()> -> _NONE_
<android.telephony.CellSignalStrengthTdscdma: int getLevel()> -> _SOURCE_
<android.icu.text.Edits: void reset()> -> _NONE_
<android.graphics.drawable.Icon: Uri getUri()> -> _NONE_
<android.telephony.AvailableNetworkInfo: List getBands()> -> _SOURCE_
<android.graphics.Insets: String toString()> -> _NONE_
<android.telephony.mbms.StreamingServiceInfo: void writeToParcel(Parcel,int)> -> _NONE_
<android.media.MediaFormat: long getLong(String,long)> -> _NONE_
<android.net.MacAddress: int getAddressType()> -> _SOURCE_
<android.hardware.biometrics.BiometricPrompt: void authenticate(BiometricPrompt.CryptoObject,CancellationSignal,Executor,BiometricPrompt.AuthenticationCallback)> -> _NONE_
<android.hardware.camera2.CameraCaptureSession: int setSingleRepeatingRequest(CaptureRequest,Executor,CameraCaptureSession.CaptureCallback)> -> _NONE_
<android.graphics.fonts.FontFamily.Builder: FontFamily.Builder addFont(Font)> -> _NONE_
<android.icu.text.Transliterator: String getDisplayName(String,ULocale)> -> _NONE_
<android.media.MediaCodecInfo: String getCanonicalName()> -> _NONE_
<android.app.slice.SliceItem: PendingIntent getAction()> -> _SOURCE_
<android.app.slice.SliceItem: CharSequence getText()> -> _SOURCE_
<android.icu.text.Bidi: boolean requiresBidi(char,int,int)> -> _NONE_
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: String getName()> -> _SOURCE_
<android.net.wifi.rtt.RangingResult: MacAddress getMacAddress()> -> _SOURCE_
<android.telephony.UiccCardInfo: String getIccId()> -> _SOURCE_
<android.graphics.text.LineBreaker.ParagraphConstraints: void setTabStops(float,float)> -> _NONE_
<android.telephony.data.ApnSetting: int getNetworkTypeBitmask()> -> _SOURCE_
<android.net.DnsResolver: void rawQuery(Network,String,int,int,int,Executor,CancellationSignal,Callback)> -> _SINK_
<android.graphics.drawable.ColorStateListDrawable: void draw(Canvas)> -> _NONE_
<android.media.MediaDrm: void setOnSessionLostStateListener(MediaDrm.OnSessionLostStateListener,Handler)> -> _NONE_
<android.graphics.fonts.Font: int hashCode()> -> _NONE_
<android.media.MicrophoneInfo: int getIndexInTheGroup()> -> _NONE_
<android.media.Session2CommandGroup: boolean hasCommand(Session2Command)> -> _NONE_
<android.system.StructTimespec: int compareTo(StructTimespec)> -> _NONE_
<android.content.pm.PackageInstaller.SessionInfo: int getStagedSessionErrorCode()> -> _NONE_
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setMvnoType(int)> -> _NONE_
<android.media.session.MediaSessionManager.RemoteUserInfo: int getUid()> -> _SOURCE_
<android.content.res.Resources: int getAttributeSetSourceResId(AttributeSet)> -> _NONE_
<android.icu.text.Transliterator: Transliterator getInstance(String)> -> _NONE_
<android.app.AutomaticZenRule: void setConfigurationActivity(ComponentName)> -> _NONE_
<android.text.DynamicLayout.Builder: DynamicLayout.Builder setBreakStrategy(int)> -> _NONE_
<android.widget.EdgeEffect: BlendMode getBlendMode()> -> _NONE_
<android.hardware.camera2.CameraManager: void registerTorchCallback(Executor,CameraManager.TorchCallback)> -> _NONE_
<android.app.slice.Slice.Builder: Slice.Builder addInt(int,String,List)> -> _NONE_
<android.se.omapi.Reader: String getName()> -> _NONE_
<android.bluetooth.BluetoothHidDeviceAppSdpSettings: String getProvider()> -> _SOURCE_
<android.database.sqlite.SQLiteCursor: void setFillWindowForwardOnly(boolean)> -> _NONE_
<android.hardware.camera2.params.OisSample: float getXshift()> -> _NONE_
<android.graphics.ImageDecoder: void setMemorySizePolicy(int)> -> _NONE_
<dalvik.system.DelegateLastClassLoader: Class loadClass(String,boolean)> -> _NONE_
<android.net.wifi.rtt.RangingRequest: int describeContents()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.MbcBand: float getReleaseTime()> -> _NONE_
<android.security.keystore.WrappedKeyEntry: String getTransformation()> -> _NONE_
<android.media.MicrophoneInfo: int getId()> -> _SOURCE_
<android.view.SurfaceControl: int describeContents()> -> _SOURCE_
<android.net.ssl.SSLEngines: boolean isSupportedEngine(SSLEngine)> -> _NONE_
<android.telephony.SubscriptionPlan: int hashCode()> -> _NONE_
<android.service.autofill.CustomDescription: int describeContents()> -> _NONE_
<android.graphics.ImageDecoder: boolean isMimeTypeSupported(String)> -> _SOURCE_
<android.os.Build.Partition: int hashCode()> -> _NONE_
<android.view.textclassifier.SelectionEvent: String getPackageName()> -> _NONE_
<android.telephony.TelephonyManager: int getCardIdForDefaultEuicc()> -> _SOURCE_
<android.view.textclassifier.SelectionEvent: int getEventIndex()> -> _NONE_
<android.graphics.drawable.GradientDrawable: int getInnerRadius()> -> _NONE_
<android.view.textclassifier.TextClassification: int describeContents()> -> _NONE_
<android.icu.text.Bidi: void setReorderingOptions(int)> -> _NONE_
<android.widget.TextView: int getLastBaselineToBottomHeight()> -> _NONE_
<android.view.contentcapture.ContentCaptureSession: void notifyViewTextChanged(AutofillId,CharSequence)> -> _NONE_
<android.icu.text.CaseMap: CaseMap.Lower toLower()> -> _NONE_
<android.telephony.mbms.FileServiceInfo: List getFiles()> -> _SOURCE_
<android.system.Os: long sendfile(FileDescriptor,FileDescriptor,Int64Ref,long)> -> _SINK_
<android.app.slice.Slice.Builder: Slice.Builder addSubSlice(Slice,String)> -> _NONE_
<android.media.AudioAttributes: boolean areHapticChannelsMuted()> -> _NONE_
<android.media.MediaSession2Service.MediaNotification: Notification getNotification()> -> _SOURCE_
<android.net.IpSecTransform.Builder: IpSecTransform.Builder setEncryption(IpSecAlgorithm)> -> _SOURCE_
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setProxyPort(int)> -> _NONE_
<android.widget.ProgressBar: BlendMode getProgressBackgroundTintBlendMode()> -> _NONE_
<android.app.Activity: void onTopResumedActivityChanged(boolean)> -> _NONE_
<android.widget.Magnifier.Builder: Magnifier build()> -> _NONE_
<android.service.autofill.DateTransformation: void writeToParcel(Parcel,int)> -> _NONE_
<android.media.AudioTrack: PersistableBundle getMetrics()> -> _SOURCE_
<android.text.style.QuoteSpan: int getGapWidth()> -> _NONE_
<android.net.wifi.rtt.ResponderLocation: double getAltitudeUncertainty()> -> _SOURCE_
<android.view.textclassifier.TextClassificationContext: void writeToParcel(Parcel,int)> -> _NONE_
<android.view.textclassifier.TextLinks: int apply(Spannable,int,Function)> -> _NONE_
<android.hardware.camera2.CameraCharacteristics: RecommendedStreamConfigurationMap getRecommendedStreamConfigurationMap(int)> -> _NONE_
<android.content.pm.PackageInstaller.SessionInfo: UserHandle getUser()> -> _SOURCE_
<android.net.wifi.WifiManager: int getMaxNumberOfNetworkSuggestionsPerApp()> -> _SOURCE_
<android.widget.Magnifier: Point getPosition()> -> _NONE_
<android.telephony.mbms.ServiceInfo: String getServiceId()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.Channel: DynamicsProcessing.Limiter getLimiter()> -> _NONE_
<android.app.slice.SliceProvider: Uri insert(Uri,ContentValues)> -> _NONE_
<android.graphics.text.MeasuredText.Builder: MeasuredText.Builder setComputeHyphenation(boolean)> -> _NONE_
<android.icu.text.Edits.Iterator: int replacementIndex()> -> _NONE_
<android.app.slice.Slice: List getItems()> -> _SOURCE_
<android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: AccessibilityNodeInfo getTargetForRegion(Region)> -> _NONE_
<android.view.textclassifier.TextLinks.TextLinkSpan: TextLinks.TextLink getTextLink()> -> _NONE_
<android.view.textclassifier.TextLanguage: float getConfidenceScore(ULocale)> -> _NONE_
<android.widget.ProgressBar: int getMinWidth()> -> _NONE_
<android.content.Context: boolean bindIsolatedService(Intent,int,String,Executor,ServiceConnection)> -> _SINK_
<android.os.Trace: void beginAsyncSection(String,int)> -> _NONE_
<android.net.wifi.aware.WifiAwareNetworkInfo: String toString()> -> _SOURCE_
<android.telephony.MbmsDownloadSession: void close()> -> _NONE_
<android.widget.ProgressBar: void setProgressBackgroundTintBlendMode(BlendMode)> -> _NONE_
<android.net.IpSecManager: void applyTransportModeTransform(Socket,int,IpSecTransform)> -> _NONE_
<android.view.View: void setVerticalScrollbarTrackDrawable(Drawable)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.MbcBand: void setThreshold(float)> -> _NONE_
<android.telephony.mbms.DownloadRequest: void writeToParcel(Parcel,int)> -> _NONE_
<android.telephony.emergency.EmergencyNumber: List getEmergencyNumberSources()> -> _NONE_
<android.view.textclassifier.TextClassificationContext.Builder: TextClassificationContext.Builder setWidgetVersion(String)> -> _NONE_
<android.telephony.euicc.DownloadableSubscription: int describeContents()> -> _SOURCE_
<android.media.RingtoneManager: AssetFileDescriptor openDefaultRingtoneUri(Context,Uri)> -> _SOURCE_
<android.icu.text.DecimalFormatSymbols: String getPercentString()> -> _NONE_
<android.graphics.RenderNode: float getRotationY()> -> _NONE_
<android.graphics.RenderNode: boolean setOutline(Outline)> -> _NONE_
<android.app.slice.SliceProvider: String getType(Uri)> -> _NONE_
<android.telecom.PhoneAccountSuggestion: int describeContents()> -> _SOURCE_
<android.telephony.NetworkScanRequest: ArrayList getPlmns()> -> _SOURCE_
<android.os.SharedMemory: void unmap(ByteBuffer)> -> _NONE_
<android.nfc.cardemulation.CardEmulation: boolean unsetOffHostForService(ComponentName)> -> _NONE_
<android.os.SharedMemory: int describeContents()> -> _SOURCE_
<android.view.contentcapture.DataRemovalRequest.LocusIdRequest: int getFlags()> -> _SOURCE_
<android.app.AppOpsManager: int unsafeCheckOpNoThrow(String,int,String)> -> _NONE_
<android.widget.ScrollView: int getTopEdgeEffectColor()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config: int getMbcBandCount()> -> _NONE_
<android.hardware.camera2.params.OutputConfiguration: int getMaxSharedSurfaceCount()> -> _NONE_
<android.net.wifi.rtt.RangingRequest: int getMaxPeers()> -> _SOURCE_
<android.view.accessibility.AccessibilityManager: boolean isAccessibilityButtonSupported()> -> _NONE_
<android.app.admin.DevicePolicyManager: String getGlobalPrivateDnsHost(ComponentName)> -> _SOURCE_
<android.view.textclassifier.TextSelection.Builder: TextSelection.Builder setId(String)> -> _NONE_
<android.content.pm.SigningInfo: boolean hasMultipleSigners()> -> _NONE_
<android.view.autofill.AutofillManager: String getDefaultFieldClassificationAlgorithm()> -> _NONE_
<android.icu.text.Bidi: int countRuns()> -> _NONE_
<android.graphics.Picture: boolean requiresHardwareAcceleration()> -> _NONE_
<android.hardware.camera2.params.MandatoryStreamCombination: CharSequence getDescription()> -> _SOURCE_
<android.bluetooth.BluetoothAdapter: BluetoothServerSocket listenUsingInsecureL2capChannel()> -> _SOURCE_
<android.media.MediaSession2Service: void removeSession(MediaSession2)> -> _NONE_
<android.telephony.SmsManager: String createAppSpecificSmsTokenWithPackageInfo(String,PendingIntent)> -> _SOURCE_
<android.media.Session2Token: Bundle getExtras()> -> _NONE_
<android.graphics.Paint: float getUnderlinePosition()> -> _NONE_
<android.view.textclassifier.TextClassification.Request.Builder: TextClassification.Request.Builder setReferenceTime(ZonedDateTime)> -> _NONE_
<android.text.style.TypefaceSpan: Typeface getTypeface()> -> _NONE_
<android.content.pm.PackageInstaller.Session: boolean isMultiPackage()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config.Builder: DynamicsProcessing.Config.Builder setPreEqByChannelIndex(int,DynamicsProcessing.Eq)> -> _NONE_
<android.app.NotificationChannel: boolean hasUserSetImportance()> -> _NONE_
<android.telecom.Call.RttCall: String readImmediately()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.Config: DynamicsProcessing.Channel getChannelByChannelIndex(int)> -> _NONE_
<android.content.pm.SigningInfo: int describeContents()> -> _SOURCE_
<android.app.admin.DeviceAdminReceiver: void onTransferOwnershipComplete(Context,PersistableBundle)> -> _NONE_
<android.icu.text.Bidi: BidiClassifier getCustomClassifier()> -> _NONE_
<android.security.AttestedKeyPair: List getAttestationRecord()> -> _SOURCE_
<android.view.textclassifier.TextClassifierEvent: String getModelName()> -> _NONE_
<android.media.audiofx.DynamicsProcessing: void setPreEqAllChannelsTo(DynamicsProcessing.Eq)> -> _NONE_
<android.telephony.euicc.EuiccInfo: String getOsVersion()> -> _SOURCE_
<android.provider.MediaStore: String getVersion(Context,String)> -> _SOURCE_
<android.graphics.text.MeasuredText: float getCharWidthAt(int)> -> _NONE_
<android.os.Environment: boolean isExternalStorageLegacy(File)> -> _SOURCE_
<android.view.autofill.AutofillManager: void notifyViewClicked(View,int)> -> _NONE_
<android.os.FileUtils: long copy(InputStream,OutputStream,CancellationSignal,Executor,FileUtils.ProgressListener)> -> _SINK_
<android.service.autofill.SaveInfo.Builder: SaveInfo.Builder addSanitizer(Sanitizer,AutofillId)> -> _NONE_
<android.telephony.NetworkScanRequest: int hashCode()> -> _NONE_
<android.net.wifi.rtt.ResponderLocation: Uri getMapImageUri()> -> _SOURCE_
<android.media.MediaCodecInfo.VideoCapabilities: List getSupportedPerformancePoints()> -> _NONE_
<android.telephony.MbmsGroupCallSession: MbmsGroupCallSession create(Context,Executor,MbmsGroupCallSessionCallback)> -> _SOURCE_
<android.telephony.TelephonyScanManager.NetworkScanCallback: void onResults(List)> -> _NONE_
<android.location.GnssClock: boolean hasElapsedRealtimeNanos()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Channel: DynamicsProcessing.EqBand getPostEqBand(int)> -> _NONE_
<android.app.Person: void writeToParcel(Parcel,int)> -> _NONE_
<android.media.AudioRecord: boolean setPreferredMicrophoneDirection(int)> -> _NONE_
<android.telephony.SubscriptionManager: ParcelUuid createSubscriptionGroup(List)> -> _SOURCE_
<android.media.Session2CommandGroup.Builder: Session2CommandGroup.Builder removeCommand(Session2Command)> -> _NONE_
<android.graphics.RenderNode: RecordingCanvas beginRecording()> -> _SOURCE_
<android.icu.text.DecimalFormatSymbols: String getPlusSignString()> -> _NONE_
<android.os.FileUtils: void closeQuietly(AutoCloseable)> -> _NONE_
<android.view.textclassifier.TextLanguage.Request.Builder: TextLanguage.Request build()> -> _NONE_
<android.security.ConfirmationPrompt.Builder: ConfirmationPrompt.Builder setPromptText(CharSequence)> -> _SINK_
<android.service.autofill.FillEventHistory.Event: Map getManuallyEnteredField()> -> _NONE_
<android.graphics.drawable.AnimatedImageDrawable: int getAlpha()> -> _NONE_
<android.telephony.mbms.DownloadRequest: boolean equals(Object)> -> _NONE_
<android.app.admin.FreezePeriod: MonthDay getEnd()> -> _NONE_
<android.media.MediaMetadataRetriever: Bitmap getPrimaryImage(MediaMetadataRetriever.BitmapParams)> -> _SOURCE_
<android.view.textclassifier.ConversationActions.Request.Builder: ConversationActions.Request.Builder setMaxSuggestions(int)> -> _NONE_
<android.view.contentcapture.DataRemovalRequest: String getPackageName()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: PersistableBundle getTransferOwnershipBundle()> -> _SOURCE_
<android.view.View: boolean isScreenReaderFocusable()> -> _NONE_
<android.app.UiAutomation: void adoptShellPermissionIdentity()> -> _NONE_
<android.se.omapi.Channel: void close()> -> _NONE_
<android.graphics.fonts.Font.Builder: void setWeight()> -> _NONE_
<android.telecom.TelecomManager: String getSystemDialerPackage()> -> _NONE_
<android.media.MediaMetadataRetriever: Bitmap getPrimaryImage()> -> _SOURCE_
<android.media.session.MediaController.PlaybackInfo: void writeToParcel(Parcel,int)> -> _NONE_
<android.widget.ProgressBar: BlendMode getIndeterminateTintBlendMode()> -> _NONE_
<android.widget.AbsListView: int getBottomEdgeEffectColor()> -> _NONE_
<android.graphics.RenderNode: boolean setSpotShadowColor(int)> -> _NONE_
<android.telephony.emergency.EmergencyNumber: boolean isInEmergencyServiceCategories(int)> -> _NONE_
<android.service.autofill.CustomDescription: String toString()> -> _NONE_
<android.database.sqlite.SQLiteQueryBuilder: int update(SQLiteDatabase,ContentValues,String,String)> -> _SINK_
<android.service.autofill.CustomDescription.Builder: CustomDescription.Builder batchUpdate(Validator,BatchUpdates)> -> _NONE_
<android.se.omapi.Session: boolean isClosed()> -> _NONE_
<android.view.accessibility.AccessibilityNodeInfo: void setTouchDelegateInfo(AccessibilityNodeInfo.TouchDelegateInfo)> -> _NONE_
<android.app.slice.SliceMetrics: void logHidden()> -> _NONE_
<android.media.MediaCas.Session: void sendSessionEvent(int,int,byte)> -> _SINK_
<android.app.DirectAction: boolean equals(Object)> -> _NONE_
<android.view.textclassifier.TextClassifier.EntityConfig.Builder: TextClassifier.EntityConfig.Builder setExcludedTypes(Collection)> -> _NONE_
<android.media.AudioFormat: int getFrameSizeInBytes()> -> _SOURCE_
<android.icu.text.Transliterator: void transliterate(Replaceable,Transliterator.Position)> -> _NONE_
<android.view.contentcapture.ContentCaptureContext: ContentCaptureContext forLocusId(String)> -> _SOURCE_
<android.view.textclassifier.TextClassificationContext.Builder: TextClassificationContext build()> -> _NONE_
<android.widget.Magnifier.Builder: Magnifier.Builder setInitialZoom(float)> -> _NONE_
<android.icu.util.LocaleData: VersionInfo getCLDRVersion()> -> _SOURCE_
<android.icu.text.CaseMap.Title: CaseMap.Title omitUnchangedText()> -> _NONE_
<android.telephony.UiccCardInfo: int getSlotIndex()> -> _SOURCE_
<android.net.wifi.WifiNetworkSpecifier: String toString()> -> _SOURCE_
<android.graphics.text.LineBreaker.Result: int getLineBreakOffset(int)> -> _NONE_
<android.app.Notification.BubbleMetadata.Builder: Notification.BubbleMetadata.Builder setDesiredHeightResId(int)> -> _NONE_
<android.icu.text.CaseMap.Lower: String apply(Locale,CharSequence)> -> _NONE_
<android.os.Binder: int getCallingUidOrThrow()> -> _SOURCE_
<android.graphics.Canvas: void drawColor(long)> -> _NONE_
<android.graphics.Paint: void getTextBounds(CharSequence,int,int,Rect)> -> _NONE_
<android.graphics.Insets: Insets max(Insets,Insets)> -> _NONE_
<android.graphics.drawable.ColorStateListDrawable: Drawable mutate()> -> _NONE_
<android.app.job.JobParameters: Network getNetwork()> -> _SOURCE_
<android.graphics.RenderNode: int getTop()> -> _NONE_
<android.service.autofill.SaveInfo.Builder: SaveInfo.Builder setValidator(Validator)> -> _NONE_
<android.net.wifi.rtt.WifiRttManager: boolean isAvailable()> -> _SOURCE_
<android.content.pm.PackageManager: void addWhitelistedRestrictedPermission()> -> _NONE_
<android.view.textclassifier.TextSelection.Request.Builder: TextSelection.Request.Builder setDefaultLocales(LocaleList)> -> _NONE_
<android.app.Person: int describeContents()> -> _SOURCE_
<android.telephony.mbms.StreamingServiceInfo: int describeContents()> -> _SOURCE_
<android.telephony.SmsManager: void sendTextMessageWithoutPersisting(String,String,String,PendingIntent,PendingIntent)> -> _SINK_
<android.media.audiofx.DynamicsProcessing.Limiter: void setThreshold(float)> -> _NONE_
<android.graphics.ImageDecoder: void setAllocator(int)> -> _NONE_
<android.app.slice.SliceItem: int getInt()> -> _NONE_
<android.media.MediaSession2: String getId()> -> _NONE_
<android.graphics.Paint: void setWordSpacing(float)> -> _NONE_
<android.location.Location: boolean hasElapsedRealtimeUncertaintyNanos()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: boolean removeOverrideApn(ComponentName,int)> -> _NONE_
<android.graphics.ImageDecoder: ImageDecoder.OnPartialImageListener getOnPartialImageListener()> -> _NONE_
<android.hardware.biometrics.BiometricPrompt.AuthenticationCallback: void onAuthenticationError(int,CharSequence)> -> _NONE_
<android.app.Activity: void setInheritShowWhenLocked(boolean)> -> _NONE_
<android.telephony.mbms.StreamingServiceCallback: void onError(int,String)> -> _NONE_
<android.app.RemoteInput: int getResultsSource(Intent)> -> _NONE_
<android.app.usage.UsageStatsManager: List queryEventStats(int,long,long)> -> _SOURCE_
<android.hardware.camera2.params.MandatoryStreamCombination.MandatoryStreamInformation: boolean isInput()> -> _NONE_
<android.view.textclassifier.ConversationAction: CharSequence getTextReply()> -> _SOURCE_
<android.media.AudioPresentation: int getMasteringIndication()> -> _NONE_
<android.media.AudioAttributes.Builder: AudioAttributes.Builder setAllowedCapturePolicy(int)> -> _NONE_
<android.graphics.RenderNode: float getCameraDistance()> -> _SOURCE_
<android.graphics.drawable.ColorStateListDrawable: void clearAlpha()> -> _NONE_
<android.icu.text.CaseMap: CaseMap omitUnchangedText()> -> _NONE_
<android.telephony.CellSignalStrengthNr: int describeContents()> -> _SOURCE_
<android.app.WallpaperColors: WallpaperColors fromDrawable(Drawable)> -> _NONE_
<android.app.Person: String getKey()> -> _SOURCE_
<android.telephony.data.ApnSetting: int getProxyPort()> -> _SOURCE_
<android.telephony.mbms.GroupCall: void updateGroupCall(List,List)> -> _SINK_
<android.service.autofill.FieldClassification: List getMatches()> -> _NONE_
<android.graphics.RenderNode: boolean setPivotX(float)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config: void setPreEqAllChannelsTo(DynamicsProcessing.Eq)> -> _NONE_
<android.hardware.camera2.params.OutputConfiguration: void removeSurface(Surface)> -> _NONE_
<android.service.autofill.CharSequenceTransformation: int describeContents()> -> _NONE_
<android.view.textclassifier.TextLinks.Builder: TextLinks.Builder setExtras(Bundle)> -> _NONE_
<android.icu.text.Edits: void addReplace(int,int)> -> _NONE_
<android.widget.Magnifier.Builder: Magnifier.Builder setOverlay(Drawable)> -> _NONE_
<android.app.admin.DevicePolicyManager: void setCrossProfileCalendarPackages(ComponentName,Set)> -> _NONE_
<android.view.textclassifier.TextClassifierEvent.LanguageDetectionEvent.Builder: TextClassifierEvent.LanguageDetectionEvent build()> -> _NONE_
<android.service.autofill.RegexValidator: int describeContents()> -> _NONE_
<android.telephony.TelephonyManager: boolean isDataRoamingEnabled()> -> _SOURCE_
<android.view.textclassifier.TextClassifierEvent.TextSelectionEvent: int getRelativeWordEndIndex()> -> _NONE_
<android.graphics.Typeface.CustomFallbackBuilder: Typeface.CustomFallbackBuilder addCustomFallback(FontFamily)> -> _NONE_
<android.net.wifi.WifiNetworkSuggestion.Builder: WifiNetworkSuggestion.Builder setSsid(String)> -> _SOURCE_
<android.security.keystore.KeyGenParameterSpec: boolean isUnlockedDeviceRequired()> -> _NONE_
<android.media.MediaExtractor.CasInfo: byte getPrivateData()> -> _SOURCE_
<android.graphics.drawable.ColorStateListDrawable: void setTintList(ColorStateList)> -> _NONE_
<android.icu.text.Transliterator: Transliterator getInstance(String,int)> -> _NONE_
<android.widget.AutoCompleteTextView: void refreshAutoCompleteResults()> -> _NONE_
<android.media.Session2CommandGroup.Builder: Session2CommandGroup build()> -> _NONE_
<android.webkit.SafeBrowsingResponse: void proceed(boolean)> -> _NONE_
<android.widget.ProgressBar: BlendMode getSecondaryProgressTintBlendMode()> -> _NONE_
<android.telephony.data.ApnSetting: String getMmsProxyAddressAsString()> -> _SOURCE_
<android.telephony.CellSignalStrengthTdscdma: void writeToParcel(Parcel,int)> -> _NONE_
<android.app.admin.DevicePolicyManager: AttestedKeyPair generateKeyPair(ComponentName,String,KeyGenParameterSpec,int)> -> _NONE_
<android.icu.text.BidiRun: int getLength()> -> _NONE_
<android.view.SurfaceControl.Builder: SurfaceControl build()> -> _NONE_
<android.app.slice.SliceItem: int describeContents()> -> _NONE_
<android.telecom.PhoneAccountSuggestion: void writeToParcel(Parcel,int)> -> _NONE_
<android.graphics.text.LineBreaker.ParagraphConstraints: int getFirstWidthLineCount()> -> _NONE_
<android.graphics.drawable.GradientDrawable: void setTintBlendMode(BlendMode)> -> _NONE_
<android.telecom.Conference: void setConnectionStartElapsedRealTime(long)> -> _NONE_
<android.view.textclassifier.TextLinks.Builder: TextLinks.Builder addLink(int,int,Map,Bundle)> -> _NONE_
<android.webkit.TracingConfig.Builder: TracingConfig build()> -> _NONE_
<android.net.MacAddress: int describeContents()> -> _SOURCE_
<android.media.AudioPlaybackCaptureConfiguration: MediaProjection getMediaProjection()> -> _SOURCE_
<android.view.textclassifier.SelectionEvent: String getEntityType()> -> _NONE_
<android.view.textclassifier.SelectionEvent: SelectionEvent createSelectionModifiedEvent(int,int)> -> _NONE_
<android.app.job.JobInfo: long getEstimatedNetworkUploadBytes()> -> _SOURCE_
<android.graphics.drawable.AnimatedImageDrawable: void draw(Canvas)> -> _NONE_
<android.media.AudioPlaybackCaptureConfiguration.Builder: AudioPlaybackCaptureConfiguration.Builder excludeUid(int)> -> _NONE_
<android.graphics.text.LineBreaker.Result: int getStartLineHyphenEdit(int)> -> _NONE_
<android.net.wifi.WifiNetworkSuggestion.Builder: WifiNetworkSuggestion.Builder setPriority(int)> -> _NONE_
<android.media.audiofx.DynamicsProcessing: DynamicsProcessing.Eq getPreEqByChannelIndex(int)> -> _NONE_
<android.graphics.Typeface.CustomFallbackBuilder: Typeface.CustomFallbackBuilder setSystemFallback(String)> -> _NONE_
<javax.net.ssl.SSLEngine: void setHandshakeApplicationProtocolSelector(BiFunction)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.MbcBand: void setKneeWidth(float)> -> _NONE_
<android.widget.Magnifier: void update()> -> _NONE_
<android.view.accessibility.AccessibilityRecord: void setScrollDeltaY(int)> -> _NONE_
<android.text.PrecomputedText.Params: int getHyphenationFrequency()> -> _NONE_
<android.text.util.Linkify: boolean addLinks(Spannable,Pattern,String,String,Linkify.MatchFilter,Linkify.TransformFilter,Function)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.MbcBand: void setAttackTime(float)> -> _NONE_
<android.view.ViewStructure: void setImportantForAutofill(int)> -> _NONE_
<android.app.slice.SliceProvider: void onSlicePinned(Uri)> -> _NONE_
<android.database.CursorWrapper: void setNotificationUris(ContentResolver,List)> -> _NONE_
<android.service.autofill.FieldClassification.Match: String getCategoryId()> -> _NONE_
<android.os.storage.StorageManager: StorageVolume getStorageVolume(Uri)> -> _SOURCE_
<android.view.textclassifier.TextLinks: int describeContents()> -> _NONE_
<android.telephony.CellInfoNr: CellSignalStrength getCellSignalStrength()> -> _SOURCE_
<android.graphics.RenderNode: boolean hasShadow()> -> _NONE_
<android.service.notification.ZenPolicy: int getPriorityCategoryMessages()> -> _NONE_
<android.media.session.MediaSession.Callback: void onSetPlaybackSpeed(float)> -> _NONE_
<android.media.AudioRecord: boolean setPreferredMicrophoneFieldDimension(float)> -> _NONE_
<android.content.pm.ModuleInfo: boolean equals(Object)> -> _NONE_
<android.app.Instrumentation: Activity startActivitySync(Intent,Bundle)> -> _NONE_
<android.media.Session2CommandGroup.Builder: Session2CommandGroup.Builder addCommand(Session2Command)> -> _NONE_
<android.text.PrecomputedText: int length()> -> _NONE_
<android.bluetooth.BluetoothHidDevice.Callback: void onVirtualCableUnplug(BluetoothDevice)> -> _SINK_
<android.net.wifi.WifiNetworkSuggestion.Builder: WifiNetworkSuggestion.Builder setBssid(MacAddress)> -> _SOURCE_
<android.service.notification.ZenPolicy: int getPriorityCategorySystem()> -> _NONE_
<android.app.VoiceInteractor: boolean unregisterOnDestroyedCallback(Runnable)> -> _NONE_
<android.content.pm.CrossProfileApps: CharSequence getProfileSwitchingLabel(UserHandle)> -> _NONE_
<android.view.textclassifier.TextClassificationContext: String toString()> -> _NONE_
<android.database.sqlite.SQLiteDatabase: SQLiteDatabase openDatabase(File,SQLiteDatabase.OpenParams)> -> _SOURCE_
<android.media.MediaPlayer: AudioDeviceInfo getRoutedDevice()> -> _SOURCE_
<android.graphics.HardwareRenderer: void setLightSourceAlpha(float,float)> -> _NONE_
<android.app.slice.SliceProvider: int update(Uri,ContentValues,String,String)> -> _NONE_
<android.media.SubtitleData: byte getData()> -> _SOURCE_
<android.graphics.drawable.AnimatedVectorDrawable: void setTintBlendMode(BlendMode)> -> _NONE_
<android.telephony.data.ApnSetting: int getApnTypeBitmask()> -> _SOURCE_
<android.app.Person: String getUri()> -> _SOURCE_
<android.app.admin.DevicePolicyManager: void clearApplicationUserData(ComponentName,String,Executor,DevicePolicyManager.OnClearApplicationUserDataListener)> -> _NONE_
<android.icu.util.Currency: Currency fromJavaCurrency(Currency)> -> _NONE_
<android.text.style.TextAppearanceSpan: LocaleList getTextLocales()> -> _NONE_
<android.telecom.ConnectionService: void onHandoverFailed(ConnectionRequest,int)> -> _SINK_
<android.graphics.drawable.GradientDrawable: void setPadding(int,int,int,int)> -> _NONE_
<android.graphics.RenderNode: boolean setClipToOutline(boolean)> -> _NONE_
<android.graphics.drawable.ColorStateListDrawable: int getChangingConfigurations()> -> _NONE_
<android.os.StrictMode.VmPolicy.Builder: StrictMode.VmPolicy.Builder detectNonSdkApiUsage()> -> _NONE_
<android.app.UiAutomation: void grantRuntimePermissionAsUser(String,String,UserHandle)> -> _NONE_
<android.app.VoiceInteractor: boolean isDestroyed()> -> _NONE_
<android.graphics.drawable.ColorStateListDrawable: Drawable.ConstantState getConstantState()> -> _NONE_
<android.bluetooth.BluetoothHidDevice: boolean registerApp(BluetoothHidDeviceAppSdpSettings,BluetoothHidDeviceAppQosSettings,BluetoothHidDeviceAppQosSettings,Executor,BluetoothHidDevice.Callback)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.Config: DynamicsProcessing.Mbc getMbcByChannelIndex(int)> -> _NONE_
<android.icu.text.Edits.Iterator: int destinationIndexFromSourceIndex(int)> -> _NONE_
<android.widget.PopupWindow: void setTouchModal(boolean)> -> _NONE_
<android.service.voice.VoiceInteractionSession: void onHandleAssist(VoiceInteractionSession.AssistState)> -> _NONE_
<android.graphics.RenderNode: boolean setElevation(float)> -> _NONE_
<android.media.AudioTrack: int setPresentation(AudioPresentation)> -> _NONE_
<android.widget.TextView: void setTextSelectHandleLeft(Drawable)> -> _NONE_
<android.view.contentcapture.DataRemovalRequest.Builder: DataRemovalRequest build()> -> _NONE_
<android.telephony.MbmsStreamingSession: void requestUpdateStreamingServices(List)> -> _NONE_
<android.graphics.fonts.Font.Builder: Font.Builder setTtcIndex(int)> -> _NONE_
<android.view.textclassifier.ConversationAction: RemoteAction getAction()> -> _NONE_
<android.service.notification.ZenPolicy: int getPriorityCategoryAlarms()> -> _NONE_
<android.media.MediaRecorder: void unregisterAudioRecordingCallback(AudioManager.AudioRecordingCallback)> -> _NONE_
<android.service.notification.StatusBarNotification: String getOpPkg()> -> _NONE_
<android.view.textclassifier.SelectionEvent: String toString()> -> _SOURCE_
<android.telephony.CellSignalStrengthTdscdma: int describeContents()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing: void setLimiterAllChannelsTo(DynamicsProcessing.Limiter)> -> _NONE_
<android.webkit.TracingConfig.Builder: TracingConfig.Builder addCategories(Collection)> -> _NONE_
<android.os.Trace: void endAsyncSection(String,int)> -> _NONE_
<android.media.AudioPlaybackCaptureConfiguration.Builder: AudioPlaybackCaptureConfiguration build()> -> _NONE_
<android.media.audiofx.DynamicsProcessing.MbcBand: float getAttackTime()> -> _NONE_
<android.telephony.SubscriptionPlan.Builder: SubscriptionPlan.Builder createNonrecurring(ZonedDateTime,ZonedDateTime)> -> _SOURCE_
<android.telephony.CellInfoTdscdma: String toString()> -> _SOURCE_
<android.view.textclassifier.SelectionEvent: SelectionEvent createSelectionStartedEvent(int,int)> -> _NONE_
<android.media.audiofx.DynamicsProcessing: void setPostEqAllChannelsTo(DynamicsProcessing.Eq)> -> _NONE_
<android.graphics.Insets: Insets of(Rect)> -> _NONE_
<android.view.contentcapture.ContentCaptureSession: void notifyViewDisappeared(AutofillId)> -> _NONE_
<android.net.TrafficStats: void setThreadStatsUid(int)> -> _NONE_
<android.net.MacAddress: MacAddress fromString(String)> -> _SOURCE_
<android.icu.text.Bidi: BidiRun getParagraphByIndex(int)> -> _NONE_
<android.telephony.data.ApnSetting: int getMmsProxyPort()> -> _SOURCE_
<android.media.RingtoneManager: boolean hasHapticChannels(Uri)> -> _NONE_
<android.media.MediaController2.ControllerCallback: void onDisconnected(MediaController2)> -> _NONE_
<android.view.textclassifier.ConversationActions.Message: Person getAuthor()> -> _SOURCE_
<android.view.textclassifier.TextClassification.Request.Builder: TextClassification.Request build()> -> _NONE_
<android.app.admin.DeviceAdminReceiver: void onTransferAffiliatedProfileOwnershipComplete(Context,UserHandle)> -> _NONE_
<android.telephony.SubscriptionInfo: ParcelUuid getGroupUuid()> -> _SOURCE_
<android.media.MediaDrm: boolean isCryptoSchemeSupported(UUID,String,int)> -> _NONE_
<android.app.WallpaperColors: void writeToParcel(Parcel,int)> -> _NONE_
<android.se.omapi.SEService: boolean isConnected()> -> _NONE_
<android.text.style.BulletSpan: int getColor()> -> _NONE_
<android.widget.TextView: void setFirstBaselineToTopHeight(int)> -> _NONE_
<android.media.audiofx.DynamicsProcessing.MbcBand: float getPreGain()> -> _NONE_
<android.view.DisplayCutout: int getSafeInsetLeft()> -> _NONE_
<android.net.LinkProperties: void setMtu(int)> -> _NONE_
<android.telephony.data.ApnSetting.Builder: ApnSetting.Builder setAuthType(int)> -> _NONE_
<android.database.sqlite.SQLiteQueryBuilder: int delete(SQLiteDatabase,String,String)> -> _NONE_
<android.view.textclassifier.TextLinks.Builder: TextLinks.Builder addLink(int,int,Map)> -> _NONE_
<android.telephony.MbmsDownloadSession: void addProgressListener(DownloadRequest,Executor,DownloadProgressListener)> -> _NONE_
<android.media.MediaCodecInfo: boolean isHardwareAccelerated()> -> _NONE_
<android.media.MediaController2: Object sendSessionCommand(Session2Command,Bundle)> -> _NONE_
<android.view.contentcapture.ContentCaptureManager: void setContentCaptureEnabled(boolean)> -> _NONE_
<android.widget.Switch: void setThumbTintBlendMode(BlendMode)> -> _NONE_
<android.telephony.AvailableNetworkInfo: boolean equals(Object)> -> _NONE_
<android.telephony.RadioAccessSpecifier: int describeContents()> -> _SOURCE_
<android.app.usage.EventStats: void writeToParcel(Parcel,int)> -> _NONE_
<android.service.autofill.UserData: int getMinValueLength()> -> _NONE_
<android.view.View: void removeOnUnhandledKeyEventListener(View.OnUnhandledKeyEventListener)> -> _NONE_
<android.media.MediaSession2Service: void onDestroy()> -> _NONE_
<android.widget.RemoteViews: void setOnClickResponse(int,RemoteViews.RemoteResponse)> -> _NONE_
<android.widget.Magnifier: int getHeight()> -> _NONE_
<android.view.textclassifier.ConversationAction: Bundle getExtras()> -> _NONE_
<android.app.usage.NetworkStats.Bucket: int getDefaultNetworkStatus()> -> _SOURCE_
<android.widget.TextView: boolean isAllCaps()> -> _NONE_
<android.graphics.RenderNode: boolean setRotationZ(float)> -> _NONE_
<android.service.voice.VoiceInteractionService: Set onGetSupportedVoiceActions(Set)> -> _NONE_
<dalvik.system.DelegateLastClassLoader: URL getResource(String)> -> _NONE_
<android.net.wifi.WifiManager: int removeNetworkSuggestions(List)> -> _NONE_
<javax.net.ssl.SSLEngine: String getHandshakeApplicationProtocol()> -> _SOURCE_
<android.telephony.mbms.DownloadStatusListener: void onStatusUpdated(DownloadRequest,FileInfo,int)> -> _SINK_
<android.view.contentcapture.ContentCaptureSession: void notifyViewAppeared(ViewStructure)> -> _NONE_
<android.location.SettingInjectorService: void refreshSettings(Context)> -> _NONE_
<android.graphics.Paint: void setShadowLayer(float,float,float,long)> -> _NONE_
<android.telephony.CellIdentityLte: String getMccString()> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.BandStage: int getBandCount()> -> _NONE_
<android.icu.text.Bidi: int getRunLimit(int)> -> _NONE_
<android.os.strictmode.InstanceCountViolation: long getNumberOfInstances()> -> _NONE_
<android.media.session.MediaSessionManager: void addOnSession2TokensChangedListener(MediaSessionManager.OnSession2TokensChangedListener)> -> _NONE_
<android.app.Notification.MessagingStyle.Message: Person getSenderPerson()> -> _SOURCE_
<android.system.StructTimeval: int hashCode()> -> _NONE_
<android.text.style.TextAppearanceSpan: float getShadowDy()> -> _NONE_
<android.view.textclassifier.TextClassification.Request: void writeToParcel(Parcel,int)> -> _NONE_
<android.graphics.RenderNode: boolean setScaleY(float)> -> _NONE_
<android.view.ContextThemeWrapper: void setTheme(Resources.Theme)> -> _NONE_
<android.view.SurfaceControl.Transaction: SurfaceControl.Transaction reparent(SurfaceControl,SurfaceControl)> -> _NONE_
<android.app.job.JobWorkItem: long getEstimatedNetworkUploadBytes()> -> _SOURCE_
<android.graphics.RenderNode: boolean setPosition(Rect)> -> _NONE_
<android.view.textclassifier.ConversationAction: float getConfidenceScore()> -> _NONE_
<android.view.contentcapture.ContentCaptureContext: String toString()> -> _SOURCE_
<android.graphics.fonts.Font: File getFile()> -> _NONE_
<android.telephony.SubscriptionInfo: int getSubscriptionType()> -> _SOURCE_
<android.graphics.HardwareRenderer: boolean isOpaque()> -> _NONE_
<android.media.MediaDrm: void setOnExpirationUpdateListener(Executor,MediaDrm.OnExpirationUpdateListener)> -> _NONE_
<android.app.Notification.BubbleMetadata: int describeContents()> -> _SOURCE_
<android.telephony.SubscriptionPlan: boolean equals(Object)> -> _NONE_
<android.widget.CompoundButton: void setButtonTintBlendMode(BlendMode)> -> _NONE_
<android.media.MediaDrm: int getOfflineLicenseState(byte)> -> _NONE_
<android.app.Notification.Builder: Notification.Builder setLocusId(LocusId)> -> _NONE_
<android.app.Notification.MessagingStyle: boolean isGroupConversation()> -> _NONE_
<android.widget.HorizontalScrollView: void setRightEdgeEffectColor(int)> -> _NONE_
<android.media.ImageReader: ImageReader newInstance(int,int,int,int,long)> -> _SOURCE_
<android.media.audiofx.DynamicsProcessing.Config.Builder: DynamicsProcessing.Config.Builder setInputGainByChannelIndex(int,float)> -> _NONE_
<android.widget.Toolbar: void setCollapseIcon(int)> -> _NONE_
<android.view.View: void saveAttributeDataForStyleable(Context,int,AttributeSet,TypedArray,int,int)> -> _NONE_
<android.media.MediaRecorder: boolean setPreferredMicrophoneDirection(int)> -> _NONE_
<android.telecom.Connection: void sendRttInitiationSuccess()> -> _NONE_
<android.icu.text.Edits.Iterator: int newLength()> -> _NONE_